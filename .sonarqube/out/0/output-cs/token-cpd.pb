Â$
ZC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Enums\EnumHelper.cs
	namespace 	
Ustilz
 
. 
Enums 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 

EnumHelper "
{ 
public 
static 
string 
GetEnumDescription /
</ 0
T0 1
>1 2
(2 3
T3 4
value5 :
): ;
{ 	
var 
type 
= 
typeof 
( 
T 
)  
;  !
if 
( 
type 
. 
GetTypeInfo  
(  !
)! "
." #
BaseType# +
!=, .
typeof/ 5
(5 6
Enum6 :
): ;
); <
{ 
throw 
new 
ArgumentException +
(+ ,
$str, X
,X Y
nameofZ `
(` a
valuea f
)f g
)g h
;h i
} 
var!! 
name!! 
=!! 
Enum!! 
.!! 
GetNames!! $
(!!$ %
type!!% )
)!!) *
.!!* +
FirstOrDefault!!+ 9
(!!9 :
f!!: ;
=>!!< >
string!!? E
.!!E F
Equals!!F L
(!!L M
f!!M N
,!!N O
value!!P U
.!!U V
ToString!!V ^
(!!^ _
)!!_ `
,!!` a
StringComparison!!b r
.!!r s%
CurrentCultureIgnoreCase	!!s ã
)
!!ã å
)
!!å ç
;
!!ç é
var## 
field## 
=## 
type## 
.## 
GetTypeInfo## (
(##( )
)##) *
.##* +
GetField##+ 3
(##3 4
name##4 8
)##8 9
;##9 :
return%% 
field%% 
.%% 
GetCustomAttribute%% +
(%%+ ,
typeof%%, 2
(%%2 3
DisplayAttribute%%3 C
)%%C D
)%%D E
is%%F H
DisplayAttribute%%I Y
customAttribute%%Z i
?%%j k
customAttribute%%l {
.%%{ |
Description	%%| á
??
%%à ä
string
%%ã ë
.
%%ë í
Empty
%%í ó
:
%%ò ô
name
%%ö û
;
%%û ü
}&& 	
public++ 
static++ 

Dictionary++  
<++  !
string++! '
,++' (
string++) /
>++/ 0#
ToDescriptionDictionary++1 H
<++H I
T++I J
>++J K
(++K L
)++L M
{,, 	
var-- 
type-- 
=-- 
typeof-- 
(-- 
T-- 
)--  
;--  !
if.. 
(.. 
type.. 
... 
GetTypeInfo..  
(..  !
)..! "
..." #
BaseType..# +
!=.., .
typeof../ 5
(..5 6
Enum..6 :
)..: ;
)..; <
{// 
throw00 
new00 
ArgumentException00 +
(00+ ,
$str00, X
,00X Y
nameof00Z `
(00` a
T00a b
)00b c
)00c d
;00d e
}11 
var33 
names33 
=33 
Enum33 
.33 
GetNames33 %
(33% &
type33& *
)33* +
;33+ ,
string55 
Selector55 
(55 
string55 "
name55# '
)55' (
{66 
if77 
(77 
!77 
(77 
type77 
.77 
GetTypeInfo77 &
(77& '
)77' (
.77( )
GetField77) 1
(771 2
name772 6
)776 7
.777 8
GetCustomAttribute778 J
(77J K
typeof77K Q
(77Q R
DisplayAttribute77R b
)77b c
)77c d
is77e g
DisplayAttribute77h x
	attribute	77y Ç
)
77Ç É
)
77É Ñ
{88 
return99 
null99 
;99  
}:: 
return<< 
	attribute<<  
.<<  !
Description<<! ,
??<<- /
string<<0 6
.<<6 7
Empty<<7 <
;<<< =
}== 
return?? 
names?? 
.?? 
ToDictionary?? %
(??% &
name??& *
=>??+ -
name??. 2
,??2 3
Selector??4 <
)??< =
;??= >
}@@ 	
}CC 
}DD ˙(
gC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsDateTime.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
ExtensionsDateTime *
{ 
[ 	
NotNull	 
] 
public 
static 
string 
ReadableTimeStamp .
(. /
this/ 3
DateTime4 <
currentDate= H
)H I
{ 	
const 
int 
Second 
= 
$num  
;  !
const 
int 
Minute 
= 
$num !
*" #
Second$ *
;* +
const 
int 
Hour 
= 
$num 
*  !
Minute" (
;( )
const 
int 
Day 
= 
$num 
*  
Hour! %
;% &
const 
int 
Month 
= 
$num  
*! "
Day# &
;& '
var 
ts 
= 
new 
TimeSpan !
(! "
DateTime" *
.* +
UtcNow+ 1
.1 2
Ticks2 7
-8 9
currentDate: E
.E F
TicksF K
)K L
;L M
var 
delta 
= 
Math 
. 
Abs  
(  !
ts! #
.# $
TotalSeconds$ 0
)0 1
;1 2
if   
(   
delta   
<   
$num   
*   
Minute   "
)  " #
{!! 
return"" 
ts"" 
."" 
Seconds"" !
==""" $
$num""% &
?""' (
$str"") 9
:"": ;
$"""< >
{""> ?
ts""? A
.""A B
Seconds""B I
}""I J
 seconds ago""J V
"""V W
;""W X
}## 
if%% 
(%% 
delta%% 
<%% 
$num%% 
*%% 
Minute%% "
)%%" #
{&& 
return'' 
$str'' %
;''% &
}(( 
if** 
(** 
delta** 
<** 
$num** 
*** 
Minute** #
)**# $
{++ 
return,, 
$",, 
{,, 
ts,, 
.,, 
Minutes,, $
},,$ %
 minutes ago,,% 1
",,1 2
;,,2 3
}-- 
if// 
(// 
delta// 
<// 
$num// 
*// 
Minute// #
)//# $
{00 
return11 
$str11 $
;11$ %
}22 
if44 
(44 
delta44 
<44 
$num44 
*44 
Hour44 !
)44! "
{55 
return66 
$"66 
{66 
ts66 
.66 
Hours66 "
}66" #

 hours ago66# -
"66- .
;66. /
}77 
if99 
(99 
delta99 
<99 
$num99 
*99 
Hour99 !
)99! "
{:: 
return;; 
$str;; "
;;;" #
}<< 
if>> 
(>> 
delta>> 
<>> 
$num>> 
*>> 
Day>>  
)>>  !
{?? 
return@@ 
$"@@ 
{@@ 
ts@@ 
.@@ 
Days@@ !
}@@! "
	 days ago@@" +
"@@+ ,
;@@, -
}AA 
ifCC 
(CC 
deltaCC 
<CC 
$numCC 
*CC 
MonthCC "
)CC" #
{DD 
varEE 
monthsEE 
=EE 
ConvertEE $
.EE$ %
ToInt32EE% ,
(EE, -
MathEE- 1
.EE1 2
FloorEE2 7
(EE7 8
(EE8 9
doubleEE9 ?
)EE? @
tsEE@ B
.EEB C
DaysEEC G
/EEH I
$numEEJ L
)EEL M
)EEM N
;EEN O
returnFF 
monthsFF 
<=FF  
$numFF! "
?FF# $
$strFF% 4
:FF5 6
$"FF7 9
{FF9 :
monthsFF: @
}FF@ A
 months agoFFA L
"FFL M
;FFM N
}GG 
varII 
yearsII 
=II 
ConvertII 
.II  
ToInt32II  '
(II' (
MathII( ,
.II, -
FloorII- 2
(II2 3
(II3 4
doubleII4 :
)II: ;
tsII; =
.II= >
DaysII> B
/IIC D
$numIIE H
)IIH I
)III J
;IIJ K
returnJJ 
yearsJJ 
<=JJ 
$numJJ 
?JJ 
$strJJ  .
:JJ/ 0
yearsJJ1 6
+JJ7 8
$strJJ9 E
;JJE F
}KK 	
}NN 
}OO ˚
cC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsEnum.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
ExtensionsEnum &
{ 
public 
static 
bool 
In 
( 
this "
Enum# '
value( -
,- .
params/ 5
Enum6 :
[: ;
]; <
values= C
)C D
=>E G
valuesH N
.N O
AnyO R
(R S
vS T
=>U W
ReferenceEqualsX g
(g h
vh i
,i j
valuek p
)p q
)q r
;r s
} 
} ®
hC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsException.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
ExtensionsException +
{ 
public 
static 
string /
#GetMessagesFromEntireExceptionChain @
(@ A
[A B
NotNullB I
]I J
thisK O
	ExceptionP Y
eZ [
)[ \
{ 	
var 
message 
= 
e 
. 
Message #
;# $
var 
count 
= 
$num 
; 
for 
( 
var 
inner 
= 
e 
. 
InnerException -
;- .
inner/ 4
!=5 7
null8 <
;< =
inner> C
=D E
innerF K
.K L
InnerExceptionL Z
)Z [
{ 
count 
++ 
; 
var 
indent 
= 
string #
.# $
Empty$ )
.) *
PadLeft* 1
(1 2
count2 7
,7 8
$char9 =
)= >
;> ?
message 
+= 
Environment &
.& '
NewLine' .
+/ 0
indent1 7
;7 8
message 
+= 
inner  
.  !
Message! (
;( )
} 
return!! 
message!! 
;!! 
}"" 	
}%% 
}&& à9
cC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsFunc.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
ExtensionsFunc &
{ 
[ 	
NotNull	 
] 
public 
static 
Func 
< 
T 
, 
TResult %
>% &
Memoize' .
<. /
T/ 0
,0 1
TResult2 9
>9 :
(: ;
this; ?
Func@ D
<D E
TE F
,F G
TResultH O
>O P
funcQ U
)U V
{ 	
var 
t 
= 
new 

Dictionary "
<" #
T# $
,$ %
TResult& -
>- .
(. /
)/ 0
;0 1
return 
n 
=> 
{ 
if 
( 
t 
. 
ContainsKey %
(% &
n& '
)' (
)( )
{   
return!! 
t!!  
[!!  !
n!!! "
]!!" #
;!!# $
}"" 
var$$ 
result$$ 
=$$  
func$$! %
($$% &
n$$& '
)$$' (
;$$( )
t%% 
.%% 
Add%% 
(%% 
n%% 
,%% 
result%% #
)%%# $
;%%$ %
return&& 
result&& !
;&&! "
}'' 
;'' 
}(( 	
[.. 	
NotNull..	 
].. 
public// 
static// 
Func// 
<// 
TResult// "
>//" #
Memoize//$ +
<//+ ,
TResult//, 3
>//3 4
(//4 5
this//5 9
Func//: >
<//> ?
TResult//? F
>//F G
func//H L
)//L M
{00 	
var11 
t11 
=11 
new11 

Dictionary11 "
<11" #
string11# )
,11) *
TResult11+ 2
>112 3
(113 4
)114 5
;115 6
return22 
(22 
)22 
=>22 
{33 
if44 
(44 
t44 
.44 
ContainsKey44 %
(44% &
func44& *
.44* +
GetMethodInfo44+ 8
(448 9
)449 :
.44: ;
Name44; ?
)44? @
)44@ A
{55 
return66 
t66  
[66  !
func66! %
.66% &
GetMethodInfo66& 3
(663 4
)664 5
.665 6
Name666 :
]66: ;
;66; <
}77 
var99 
result99 
=99  
func99! %
(99% &
)99& '
;99' (
t:: 
.:: 
Add:: 
(:: 
func:: 
.:: 
GetMethodInfo:: ,
(::, -
)::- .
.::. /
Name::/ 3
,::3 4
result::5 ;
)::; <
;::< =
return;; 
result;; !
;;;! "
}<< 
;<< 
}== 	
publicDD 
staticDD 
longDD 
TestPerfDD #
<DD# $
TResultDD$ +
>DD+ ,
(DD, -
[DD- .
NotNullDD. 5
]DD5 6
thisDD7 ;
FuncDD< @
<DD@ A
TResultDDA H
>DDH I
actionDDJ P
,DDP Q
outDDR U
TResultDDV ]
resultDD^ d
)DDd e
{EE 	
varFF 
	stopWatchFF 
=FF 
newFF 
	StopwatchFF  )
(FF) *
)FF* +
;FF+ ,
	stopWatchGG 
.GG 
StartGG 
(GG 
)GG 
;GG 
resultII 
=II 
actionII 
.II 
InvokeII "
(II" #
)II# $
;II$ %
	stopWatchKK 
.KK 
StopKK 
(KK 
)KK 
;KK 
returnLL 
	stopWatchLL 
.LL 
ElapsedMillisecondsLL 0
;LL0 1
}MM 	
publicVV 
staticVV 
longVV 
TestPerfVV #
<VV# $
TVV$ %
,VV% &
TResultVV' .
>VV. /
(VV/ 0
[VV0 1
NotNullVV1 8
]VV8 9
thisVV: >
FuncVV? C
<VVC D
TVVD E
,VVE F
TResultVVG N
>VVN O
actionVVP V
,VVV W
outVVX [
TResultVV\ c
resultVVd j
,VVj k
TVVl m
paramVVn s
)VVs t
{WW 	
varXX 
	stopWatchXX 
=XX 
newXX 
	StopwatchXX  )
(XX) *
)XX* +
;XX+ ,
	stopWatchYY 
.YY 
StartYY 
(YY 
)YY 
;YY 
result[[ 
=[[ 
action[[ 
.[[ 
Invoke[[ "
([[" #
param[[# (
)[[( )
;[[) *
	stopWatch]] 
.]] 
Stop]] 
(]] 
)]] 
;]] 
return^^ 
	stopWatch^^ 
.^^ 
ElapsedMilliseconds^^ 0
;^^0 1
}__ 	
publicff 
staticff 
longff 
TestPerfff #
<ff# $
Tff$ %
>ff% &
(ff& '
[ff' (
NotNullff( /
]ff/ 0
thisff1 5
Actionff6 <
<ff< =
Tff= >
>ff> ?
actionff@ F
,ffF G
TffH I
paramffJ O
)ffO P
{gg 	
varhh 
	stopWatchhh 
=hh 
newhh 
	Stopwatchhh  )
(hh) *
)hh* +
;hh+ ,
	stopWatchii 
.ii 
Startii 
(ii 
)ii 
;ii 
actionkk 
.kk 
Invokekk 
(kk 
paramkk 
)kk  
;kk  !
	stopWatchmm 
.mm 
Stopmm 
(mm 
)mm 
;mm 
returnnn 
	stopWatchnn 
.nn 
ElapsedMillisecondsnn 0
;nn0 1
}oo 	
publictt 
statictt 
longtt 
TestPerftt #
(tt# $
[tt$ %
NotNulltt% ,
]tt, -
thistt. 2
Actiontt3 9
actiontt: @
)tt@ A
{uu 	
varvv 
	stopWatchvv 
=vv 
newvv 
	Stopwatchvv  )
(vv) *
)vv* +
;vv+ ,
	stopWatchww 
.ww 
Startww 
(ww 
)ww 
;ww 
actionyy 
.yy 
Invokeyy 
(yy 
)yy 
;yy 
	stopWatch{{ 
.{{ 
Stop{{ 
({{ 
){{ 
;{{ 
return|| 
	stopWatch|| 
.|| 
ElapsedMilliseconds|| 0
;||0 1
}}} 	
}
ÄÄ 
}ÅÅ Ö
jC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsIEnumerable.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
public 

static 
class !
ExtensionsIEnumerable -
{ 
public 
static 
void 
ForEach "
<" #
T# $
>$ %
(% &
[& '
NotNull' .
]. /
this0 4
IEnumerable5 @
<@ A
TA B
>B C

enumerableD N
,N O
ActionP V
<V W
TW X
>X Y
actionZ `
)` a
{ 	
foreach 
( 
var 
item 
in  

enumerable! +
)+ ,
{ 
action 
( 
item 
) 
; 
} 
} 	
public## 
static## 
string## 
ToHexString## (
(##( )
this##) -
IEnumerable##. 9
<##9 :
byte##: >
>##> ?
bytes##@ E
)##E F
=>##G I
string##J P
.##P Q
Join##Q U
(##U V
string##V \
.##\ ]
Empty##] b
,##b c
bytes##d i
.##i j
Select##j p
(##p q
b##q r
=>##s u
(##v w
$str##w z
+##{ |
b##} ~
.##~ 
ToString	## á
(
##á à
$str
##à ã
)
##ã å
)
##å ç
.
##ç é
Right
##é ì
(
##ì î
$num
##î ï
)
##ï ñ
)
##ñ ó
)
##ó ò
;
##ò ô
public)) 
static)) 
ReadOnlyCollection)) (
<))( )
T))) *
>))* +

ToReadOnly)), 6
<))6 7
T))7 8
>))8 9
())9 :
this)): >
IEnumerable))? J
<))J K
T))K L
>))L M

collection))N X
)))X Y
=>))Z \
new))] `
List))a e
<))e f
T))f g
>))g h
())h i

collection))i s
)))s t
.))t u

AsReadOnly))u 
(	)) Ä
)
))Ä Å
;
))Å Ç
},, 
}-- Ë

dC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsIList.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
internal 
static 
class 
ExtensionsIList )
{ 
internal 
static 
int 
IndexOf #
(# $
[$ %
NotNull% ,
], -
this. 2
IList3 8
<8 9
string9 ?
>? @
tabA D
,D E
stringF L
valueM R
)R S
{ 	
for 
( 
var 
i 
= 
$num 
; 
i 
< 
tab  #
.# $
Count$ )
;) *
i+ ,
++, .
). /
{ 
var 
el 
= 
tab 
[ 
i 
] 
;  
if 
( 
el 
== 
value 
)  
{ 
return 
i 
; 
} 
} 
return 
- 
$num 
; 
} 	
}   
}!! õ(
dC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsInt32.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
ExtensionsInt32 '
{ 
public 
static 
DateTime 
Ao√ªt #
(# $
this$ (
int) ,
day- 0
,0 1
int2 5
year6 :
): ;
=>< >
new? B
DateTimeC K
(K L
yearL P
,P Q
$numR S
,S T
dayU X
)X Y
;Y Z
public 
static 
DateTime 
Avril $
($ %
this% )
int* -
day. 1
,1 2
int3 6
year7 ;
); <
=>= ?
new@ C
DateTimeD L
(L M
yearM Q
,Q R
$numS T
,T U
dayV Y
)Y Z
;Z [
public!! 
static!! 
DateTime!! 
	D√©cembre!! '
(!!' (
this!!( ,
int!!- 0
day!!1 4
,!!4 5
int!!6 9
year!!: >
)!!> ?
=>!!@ B
new!!C F
DateTime!!G O
(!!O P
year!!P T
,!!T U
$num!!V X
,!!X Y
day!!Z ]
)!!] ^
;!!^ _
public'' 
static'' 
DateTime'' 
F√©vrier'' &
(''& '
this''' +
int'', /
day''0 3
,''3 4
int''5 8
year''9 =
)''= >
=>''? A
new''B E
DateTime''F N
(''N O
year''O S
,''S T
$num''U V
,''V W
day''X [
)''[ \
;''\ ]
public-- 
static-- 
DateTime-- 
Janvier-- &
(--& '
this--' +
int--, /
day--0 3
,--3 4
int--5 8
year--9 =
)--= >
=>--? A
new--B E
DateTime--F N
(--N O
year--O S
,--S T
$num--U V
,--V W
day--X [
)--[ \
;--\ ]
public33 
static33 
DateTime33 
Juillet33 &
(33& '
this33' +
int33, /
day330 3
,333 4
int335 8
year339 =
)33= >
=>33? A
new33B E
DateTime33F N
(33N O
year33O S
,33S T
$num33U V
,33V W
day33X [
)33[ \
;33\ ]
public99 
static99 
DateTime99 
Juin99 #
(99# $
this99$ (
int99) ,
day99- 0
,990 1
int992 5
year996 :
)99: ;
=>99< >
new99? B
DateTime99C K
(99K L
year99L P
,99P Q
$num99R S
,99S T
day99U X
)99X Y
;99Y Z
public?? 
static?? 
DateTime?? 
Mai?? "
(??" #
this??# '
int??( +
day??, /
,??/ 0
int??1 4
year??5 9
)??9 :
=>??; =
new??> A
DateTime??B J
(??J K
year??K O
,??O P
$num??Q R
,??R S
day??T W
)??W X
;??X Y
publicEE 
staticEE 
DateTimeEE 
MarsEE #
(EE# $
thisEE$ (
intEE) ,
dayEE- 0
,EE0 1
intEE2 5
yearEE6 :
)EE: ;
=>EE< >
newEE? B
DateTimeEEC K
(EEK L
yearEEL P
,EEP Q
$numEER S
,EES T
dayEEU X
)EEX Y
;EEY Z
publicKK 
staticKK 
DateTimeKK 
NovembreKK '
(KK' (
thisKK( ,
intKK- 0
dayKK1 4
,KK4 5
intKK6 9
yearKK: >
)KK> ?
=>KK@ B
newKKC F
DateTimeKKG O
(KKO P
yearKKP T
,KKT U
$numKKV X
,KKX Y
dayKKZ ]
)KK] ^
;KK^ _
publicQQ 
staticQQ 
DateTimeQQ 
OctobreQQ &
(QQ& '
thisQQ' +
intQQ, /
dayQQ0 3
,QQ3 4
intQQ5 8
yearQQ9 =
)QQ= >
=>QQ? A
newQQB E
DateTimeQQF N
(QQN O
yearQQO S
,QQS T
$numQQU W
,QQW X
dayQQY \
)QQ\ ]
;QQ] ^
publicWW 
staticWW 
DateTimeWW 
	SeptembreWW (
(WW( )
thisWW) -
intWW. 1
dayWW2 5
,WW5 6
intWW7 :
yearWW; ?
)WW? @
=>WWA C
newWWD G
DateTimeWWH P
(WWP Q
yearWWQ U
,WWU V
$numWWW X
,WWX Y
dayWWZ ]
)WW] ^
;WW^ _
}ZZ 
}[[ Îº
eC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsString.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
ExtensionsString (
{ 
private 
static 
readonly 
Random  &
Random' -
=. /
new0 3
Random4 :
(: ;
(; <
int< ?
)? @
DateTime@ H
.H I
NowI L
.L M
TicksM R
)R S
;S T
private 
static 
readonly 

Dictionary  *
<* +
HashType+ 3
,3 4
HashAlgorithm5 B
>B C
HashProvidersD Q
=R S
newT W

DictionaryX b
<b c
HashTypec k
,k l
HashAlgorithmm z
>z {
({ |
)| }
;} ~
public)) 
static)) 
string)) 
ComputeHash)) (
())( )
this))) -
string)). 4
input))5 :
,)): ;
HashType))< D
hashType))E M
)))M N
{** 	
try++ 
{,, 
var-- 
hash-- 
=-- 
GetHash-- "
(--" #
input--# (
,--( )
hashType--* 2
)--2 3
;--3 4
var.. 
ret.. 
=.. 
new.. 
StringBuilder.. +
(..+ ,
).., -
;..- .
foreach00 
(00 
var00 
t00 
in00 !
hash00" &
)00& '
{11 
ret22 
.22 
Append22 
(22 
t22  
.22  !
ToString22! )
(22) *
$str22* .
)22. /
)22/ 0
;220 1
}33 
return55 
ret55 
.55 
ToString55 #
(55# $
)55$ %
;55% &
}66 
catch77 
{88 
return99 
string99 
.99 
Empty99 #
;99# $
}:: 
};; 	
[AA 	
SystemAA	 
.AA 
DiagnosticsAA 
.AA 
	ContractsAA %
.AA% &
PureAA& *
]AA* +
publicBB 
staticBB 
stringBB 
DecryptBB $
(BB$ %
[BB% &
NotNullBB& -
]BB- .
thisBB/ 3
stringBB4 :
stringToDecryptBB; J
,BBJ K
stringBBL R
keyBBS V
)BBV W
{CC 	
ifDD 
(DD 
stringDD 
.DD 
IsNullOrEmptyDD $
(DD$ %
stringToDecryptDD% 4
)DD4 5
||DD6 8
stringDD9 ?
.DD? @
IsNullOrEmptyDD@ M
(DDM N
keyDDN Q
)DDQ R
)DDR S
{EE 
throwFF 
newFF 
ArgumentExceptionFF +
(FF+ ,
$strFF, Q
)FFQ R
;FFR S
}GG 
ContractII 
.II 
EndContractBlockII %
(II% &
)II& '
;II' (
varKK 
csppKK 
=KK 
newKK 
CspParametersKK (
{KK) *
KeyContainerNameKK+ ;
=KK< =
keyKK> A
}KKB C
;KKC D
varLL 
rsaLL 
=LL 
newLL $
RSACryptoServiceProviderLL 2
(LL2 3
csppLL3 7
)LL7 8
{LL9 :
PersistKeyInCspLL; J
=LLK L
trueLLM Q
}LLR S
;LLS T
varNN 
decryptArrayNN 
=NN 
stringToDecryptNN .
.NN. /
SplitNN/ 4
(NN4 5
newNN5 8
[NN8 9
]NN9 :
{NN; <
$strNN= @
}NNA B
,NNB C
StringSplitOptionsNND V
.NNV W
NoneNNW [
)NN[ \
;NN\ ]
varOO 
decryptByteArrayOO  
=OO! "
decryptArrayOO# /
.OO/ 0
SelectOO0 6
(OO6 7
sOO7 8
=>OO9 ;
ConvertOO< C
.OOC D
ToByteOOD J
(OOJ K
byteOOK O
.OOO P
ParseOOP U
(OOU V
sOOV W
,OOW X
NumberStylesOOY e
.OOe f
	HexNumberOOf o
)OOo p
)OOp q
)OOq r
.OOr s
ToArrayOOs z
(OOz {
)OO{ |
;OO| }
varPP 
bytesPP 
=PP 
rsaPP 
.PP 
DecryptPP #
(PP# $
decryptByteArrayPP$ 4
,PP4 5
truePP6 :
)PP: ;
;PP; <
returnRR 
EncodingRR 
.RR 
UTF8RR  
.RR  !
	GetStringRR! *
(RR* +
bytesRR+ 0
)RR0 1
;RR1 2
}SS 	
[YY 	
SystemYY	 
.YY 
DiagnosticsYY 
.YY 
	ContractsYY %
.YY% &
PureYY& *
]YY* +
publicZZ 
staticZZ 
stringZZ 
EncryptZZ $
(ZZ$ %
thisZZ% )
stringZZ* 0
stringToEncryptZZ1 @
,ZZ@ A
stringZZB H
keyZZI L
)ZZL M
{[[ 	
if\\ 
(\\ 
string\\ 
.\\ 
IsNullOrEmpty\\ $
(\\$ %
stringToEncrypt\\% 4
)\\4 5
)\\5 6
{]] 
throw^^ 
new^^ 
ArgumentException^^ +
(^^+ ,
$str^^, X
)^^X Y
;^^Y Z
}__ 
ifaa 
(aa 
stringaa 
.aa 
IsNullOrEmptyaa $
(aa$ %
keyaa% (
)aa( )
)aa) *
{bb 
throwcc 
newcc 
ArgumentExceptioncc +
(cc+ ,
$strcc, q
)ccq r
;ccr s
}dd 
Contractff 
.ff 
EndContractBlockff %
(ff% &
)ff& '
;ff' (
varhh 
cspphh 
=hh 
newhh 
CspParametershh (
{hh) *
KeyContainerNamehh+ ;
=hh< =
keyhh> A
}hhB C
;hhC D
varii 
rsaii 
=ii 
newii $
RSACryptoServiceProviderii 2
(ii2 3
csppii3 7
)ii7 8
{ii9 :
PersistKeyInCspii; J
=iiK L
trueiiM Q
}iiR S
;iiS T
varjj 
bytesjj 
=jj 
rsajj 
.jj 
Encryptjj #
(jj# $
Encodingjj$ ,
.jj, -
UTF8jj- 1
.jj1 2
GetBytesjj2 :
(jj: ;
stringToEncryptjj; J
)jjJ K
,jjK L
truejjM Q
)jjQ R
;jjR S
returnll 
BitConverterll 
.ll  
ToStringll  (
(ll( )
bytesll) .
)ll. /
;ll/ 0
}mm 	
publicss 
staticss 
stringss 
Fss 
(ss 
thisss #
stringss$ *
stringFormatss+ 7
,ss7 8
paramsss9 ?
objectss@ F
[ssF G
]ssG H
stringParamsssI U
)ssU V
=>ssW Y
stringssZ `
.ss` a
Formatssa g
(ssg h
stringFormatssh t
,sst u
stringParams	ssv Ç
)
ssÇ É
;
ssÉ Ñ
publiczz 
staticzz 
stringzz 
Fszz 
<zz  
Tzz  !
>zz! "
(zz" #
thiszz# '
stringzz( .
templatezz/ 7
,zz7 8
Tzz9 :
datazz; ?
)zz? @
=>zzA C
RegexzzD I
.zzI J
ReplacezzJ Q
(zzQ R
templatezzR Z
,zzZ [
$strzz\ m
,zzm n
matchzzo t
=>zzu w
GetValue	zzx Ä
(
zzÄ Å
match
zzÅ Ü
,
zzÜ á
data
zzà å
)
zzå ç
)
zzç é
.
zzé è
Replace
zzè ñ
(
zzñ ó
$str
zzó õ
,
zzõ ú
$str
zzù †
)
zz† °
.
zz° ¢
Replace
zz¢ ©
(
zz© ™
$str
zz™ Æ
,
zzÆ Ø
$str
zz∞ ≥
)
zz≥ ¥
;
zz¥ µ
[
ÅÅ 	
NotNull
ÅÅ	 
]
ÅÅ 
public
ÇÇ 
static
ÇÇ 
string
ÇÇ 
GenerateHash
ÇÇ )
(
ÇÇ) *
[
ÇÇ* +
NotNull
ÇÇ+ 2
]
ÇÇ2 3
string
ÇÇ4 :
password
ÇÇ; C
,
ÇÇC D
string
ÇÇE K
salt
ÇÇL P
=
ÇÇQ R
null
ÇÇS W
,
ÇÇW X
HashType
ÇÇY a
provider
ÇÇb j
=
ÇÇk l
HashType
ÇÇm u
.
ÇÇu v
MD5
ÇÇv y
)
ÇÇy z
{
ÉÉ 	
Check
ÑÑ 
.
ÑÑ 
NotEmpty
ÑÑ 
(
ÑÑ 
password
ÑÑ #
,
ÑÑ# $
nameof
ÑÑ% +
(
ÑÑ+ ,
password
ÑÑ, 4
)
ÑÑ4 5
)
ÑÑ5 6
;
ÑÑ6 7
salt
ÜÜ 
=
ÜÜ 
salt
ÜÜ 
??
ÜÜ 
GenerateSalt
ÜÜ '
(
ÜÜ' (
)
ÜÜ( )
;
ÜÜ) *
var
àà 
bytes
àà 
=
àà 
Encoding
àà  
.
àà  !
Unicode
àà! (
.
àà( )
GetBytes
àà) 1
(
àà1 2
salt
àà2 6
+
àà7 8
password
àà9 A
)
ààA B
;
ààB C
try
ââ 
{
ää 
var
ãã 
hash
ãã 
=
ãã 
HashProviders
ãã (
[
ãã( )
provider
ãã) 1
]
ãã1 2
.
ãã2 3
ComputeHash
ãã3 >
(
ãã> ?
bytes
ãã? D
)
ããD E
;
ããE F
return
åå 
provider
åå 
+
åå  !
$str
åå" %
+
åå& '
salt
åå( ,
+
åå- .
$str
åå/ 2
+
åå3 4
hash
åå5 9
.
åå9 :
ToHexString
åå: E
(
ååE F
)
ååF G
;
ååG H
}
çç 
catch
éé 
(
éé "
KeyNotFoundException
éé '
ex
éé( *
)
éé* +
{
èè 
throw
êê 
new
êê #
NotSupportedException
êê /
(
êê/ 0
string
êê0 6
.
êê6 7
Format
êê7 =
(
êê= >
$str
êê> d
,
êêd e
provider
êêf n
)
êên o
,
êêo p
ex
êêq s
)
êês t
;
êêt u
}
ëë 
}
íí 	
public
òò 
static
òò 
string
òò 
GeneratePassword
òò -
(
òò- .
)
òò. /
{
ôô 	
var
öö 
randomNumber
öö 
=
öö 
Random
öö %
.
öö% &
Next
öö& *
(
öö* +
$num
öö+ /
,
öö/ 0
int
öö1 4
.
öö4 5
MaxValue
öö5 =
)
öö= >
;
öö> ?
return
õõ 
Convert
õõ 
.
õõ 
ToBase64String
õõ )
(
õõ) *
Encoding
õõ* 2
.
õõ2 3
Unicode
õõ3 :
.
õõ: ;
GetBytes
õõ; C
(
õõC D
randomNumber
õõD P
.
õõP Q
ToString
õõQ Y
(
õõY Z
)
õõZ [
)
õõ[ \
)
õõ\ ]
;
õõ] ^
}
úú 	
public
°° 
static
°° 
string
°° 
GenerateSalt
°° )
(
°°) *
int
°°* -
length
°°. 4
=
°°5 6
$num
°°7 8
)
°°8 9
=>
°°: <
GenerateSaltBytes
°°= N
(
°°N O
length
°°O U
)
°°U V
.
°°V W
ToHexString
°°W b
(
°°b c
)
°°c d
;
°°d e
[
¶¶ 	
NotNull
¶¶	 
]
¶¶ 
public
ßß 
static
ßß 
byte
ßß 
[
ßß 
]
ßß 
GenerateSaltBytes
ßß .
(
ßß. /
int
ßß/ 2
length
ßß3 9
=
ßß: ;
$num
ßß< >
)
ßß> ?
{
®® 	
var
©© 
salt
©© 
=
©© 
new
©© 
byte
©© 
[
©©  
length
©©  &
]
©©& '
;
©©' (
Random
™™ 
.
™™ 
	NextBytes
™™ 
(
™™ 
salt
™™ !
)
™™! "
;
™™" #
return
¨¨ 
salt
¨¨ 
;
¨¨ 
}
≠≠ 	
[
≤≤ 	
NotNull
≤≤	 
]
≤≤ 
public
≥≥ 
static
≥≥ 
byte
≥≥ 
[
≥≥ 
]
≥≥ 

HexToBytes
≥≥ '
(
≥≥' (
[
≥≥( )
NotNull
≥≥) 0
]
≥≥0 1
this
≥≥2 6
string
≥≥7 =
	hexString
≥≥> G
)
≥≥G H
{
¥¥ 	
if
µµ 
(
µµ 
	hexString
µµ 
.
µµ 
Length
µµ  
%
µµ! "
$num
µµ# $
!=
µµ% '
$num
µµ( )
)
µµ) *
{
∂∂ 
throw
∑∑ 
new
∑∑ 
ArgumentException
∑∑ +
(
∑∑+ ,
string
∑∑, 2
.
∑∑2 3
Format
∑∑3 9
(
∑∑9 :
$str
∑∑: b
,
∑∑b c
	hexString
∑∑d m
)
∑∑m n
)
∑∑n o
;
∑∑o p
}
∏∏ 
var
∫∫ 
retVal
∫∫ 
=
∫∫ 
new
∫∫ 
byte
∫∫ !
[
∫∫! "
	hexString
∫∫" +
.
∫∫+ ,
Length
∫∫, 2
/
∫∫3 4
$num
∫∫5 6
]
∫∫6 7
;
∫∫7 8
for
ªª 
(
ªª 
var
ªª 
i
ªª 
=
ªª 
$num
ªª 
;
ªª 
i
ªª 
<
ªª 
	hexString
ªª  )
.
ªª) *
Length
ªª* 0
;
ªª0 1
i
ªª2 3
+=
ªª4 6
$num
ªª7 8
)
ªª8 9
{
ºº 
retVal
ΩΩ 
[
ΩΩ 
i
ΩΩ 
/
ΩΩ 
$num
ΩΩ 
]
ΩΩ 
=
ΩΩ 
byte
ΩΩ  $
.
ΩΩ$ %
Parse
ΩΩ% *
(
ΩΩ* +
	hexString
ΩΩ+ 4
.
ΩΩ4 5
	Substring
ΩΩ5 >
(
ΩΩ> ?
i
ΩΩ? @
,
ΩΩ@ A
$num
ΩΩB C
)
ΩΩC D
,
ΩΩD E
NumberStyles
ΩΩF R
.
ΩΩR S
	HexNumber
ΩΩS \
,
ΩΩ\ ]
CultureInfo
ΩΩ^ i
.
ΩΩi j
InvariantCulture
ΩΩj z
)
ΩΩz {
;
ΩΩ{ |
}
ææ 
return
¿¿ 
retVal
¿¿ 
;
¿¿ 
}
¡¡ 	
public
∆∆ 
static
∆∆ 
bool
∆∆ 
IsNullOrEmpty
∆∆ (
(
∆∆( )
this
∆∆) -
string
∆∆. 4
str
∆∆5 8
)
∆∆8 9
=>
∆∆: <
string
∆∆= C
.
∆∆C D
IsNullOrEmpty
∆∆D Q
(
∆∆Q R
str
∆∆R U
)
∆∆U V
;
∆∆V W
public
ÃÃ 
static
ÃÃ 
string
ÃÃ 
Join
ÃÃ !
(
ÃÃ! "
this
ÃÃ" &
string
ÃÃ' -
[
ÃÃ- .
]
ÃÃ. /
strs
ÃÃ0 4
,
ÃÃ4 5
string
ÃÃ6 <
	separator
ÃÃ= F
)
ÃÃF G
=>
ÃÃH J
string
ÃÃK Q
.
ÃÃQ R
Join
ÃÃR V
(
ÃÃV W
	separator
ÃÃW `
,
ÃÃ` a
strs
ÃÃb f
)
ÃÃf g
;
ÃÃg h
[
““ 	
System
““	 
.
““ 
Diagnostics
““ 
.
““ 
	Contracts
““ %
.
““% &
Pure
““& *
]
““* +
public
”” 
static
”” 
T
”” 
ToEnum
”” 
<
”” 
T
””  
>
””  !
(
””! "
this
””" &
string
””' -
value
””. 3
)
””3 4
where
‘‘ 
T
‘‘ 
:
‘‘ 
struct
‘‘ 
=>
‘‘ 
(
’’ 
T
’’ 
)
’’ 
Enum
’’ 
.
’’ 
Parse
’’ 
(
’’ 
typeof
’’  
(
’’  !
T
’’! "
)
’’" #
,
’’# $
value
’’% *
,
’’* +
true
’’, 0
)
’’0 1
;
’’1 2
public
⁄⁄ 
static
⁄⁄ 
void
⁄⁄ 
ToException
⁄⁄ &
<
⁄⁄& '
T
⁄⁄' (
>
⁄⁄( )
(
⁄⁄) *
this
⁄⁄* .
string
⁄⁄/ 5
message
⁄⁄6 =
)
⁄⁄= >
where
€€ 
T
€€ 
:
€€ 
	Exception
€€ 
,
€€  
new
€€! $
(
€€$ %
)
€€% &
=>
€€' )
throw
‹‹ 
(
‹‹ 
T
‹‹ 
)
‹‹ 
	Activator
‹‹ 
.
‹‹ 
CreateInstance
‹‹ -
(
‹‹- .
typeof
‹‹. 4
(
‹‹4 5
T
‹‹5 6
)
‹‹6 7
,
‹‹7 8
message
‹‹9 @
)
‹‹@ A
;
‹‹A B
public
‚‚ 
static
‚‚ 
bool
‚‚ 
Validate
‚‚ #
(
‚‚# $
[
‚‚$ %
NotNull
‚‚% ,
]
‚‚, -
string
‚‚. 4
	hashValue
‚‚5 >
,
‚‚> ?
[
‚‚@ A
NotNull
‚‚A H
]
‚‚H I
string
‚‚J P
password
‚‚Q Y
)
‚‚Y Z
{
„„ 	
Check
‰‰ 
.
‰‰ 
NotEmpty
‰‰ 
(
‰‰ 
	hashValue
‰‰ $
,
‰‰$ %
nameof
‰‰& ,
(
‰‰, -
	hashValue
‰‰- 6
)
‰‰6 7
)
‰‰7 8
;
‰‰8 9
var
ÊÊ 
	hashParts
ÊÊ 
=
ÊÊ 
	hashValue
ÊÊ %
.
ÊÊ% &
Split
ÊÊ& +
(
ÊÊ+ ,
$char
ÊÊ, /
)
ÊÊ/ 0
;
ÊÊ0 1
if
ÁÁ 
(
ÁÁ 
	hashParts
ÁÁ 
.
ÁÁ 
Length
ÁÁ  
!=
ÁÁ! #
$num
ÁÁ$ %
)
ÁÁ% &
{
ËË 
throw
ÈÈ 
new
ÈÈ 
ArgumentException
ÈÈ +
(
ÈÈ+ ,
$strÈÈ, ¿
)ÈÈ¿ ¡
;ÈÈ¡ ¬
}
ÍÍ 
HashType
ÏÏ 
provider
ÏÏ 
;
ÏÏ 
var
ÌÌ 
salt
ÌÌ 
=
ÌÌ 
	hashParts
ÌÌ  
[
ÌÌ  !
$num
ÌÌ! "
]
ÌÌ" #
;
ÌÌ# $
try
ÔÔ 
{
 
provider
ÒÒ 
=
ÒÒ 
	hashParts
ÒÒ $
[
ÒÒ$ %
$num
ÒÒ% &
]
ÒÒ& '
.
ÒÒ' (
ToEnum
ÒÒ( .
<
ÒÒ. /
HashType
ÒÒ/ 7
>
ÒÒ7 8
(
ÒÒ8 9
)
ÒÒ9 :
;
ÒÒ: ;
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
ex
ÛÛ 
)
ÛÛ  
{
ÙÙ 
throw
ıı 
new
ıı 
ArgumentException
ıı +
(
ıı+ ,
string
ıı, 2
.
ıı2 3
Format
ıı3 9
(
ıı9 :
$str
ıı: W
,
ııW X
	hashValue
ııY b
[
ııb c
$num
ııc d
]
ııd e
)
ııe f
,
ııf g
ex
ııh j
)
ııj k
;
ıık l
}
ˆˆ 
return
¯¯ 
	hashValue
¯¯ 
==
¯¯ 
GenerateHash
¯¯  ,
(
¯¯, -
password
¯¯- 5
,
¯¯5 6
salt
¯¯7 ;
,
¯¯; <
provider
¯¯= E
)
¯¯E F
;
¯¯F G
}
˘˘ 	
private
ÉÉ 
static
ÉÉ 
byte
ÉÉ 
[
ÉÉ 
]
ÉÉ 
GetHash
ÉÉ %
(
ÉÉ% &
string
ÉÉ& ,
input
ÉÉ- 2
,
ÉÉ2 3
HashType
ÉÉ4 <
hash
ÉÉ= A
)
ÉÉA B
{
ÑÑ 	
var
ÖÖ 

inputBytes
ÖÖ 
=
ÖÖ 
Encoding
ÖÖ %
.
ÖÖ% &
ASCII
ÖÖ& +
.
ÖÖ+ ,
GetBytes
ÖÖ, 4
(
ÖÖ4 5
input
ÖÖ5 :
)
ÖÖ: ;
;
ÖÖ; <
switch
áá 
(
áá 
hash
áá 
)
áá 
{
àà 
case
ââ 
HashType
ââ 
.
ââ 
MD5
ââ !
:
ââ! "
return
ââ# )
MD5
ââ* -
.
ââ- .
Create
ââ. 4
(
ââ4 5
)
ââ5 6
.
ââ6 7
ComputeHash
ââ7 B
(
ââB C

inputBytes
ââC M
)
ââM N
;
ââN O
case
ãã 
HashType
ãã 
.
ãã 
SHA1
ãã "
:
ãã" #
return
ãã$ *
SHA1
ãã+ /
.
ãã/ 0
Create
ãã0 6
(
ãã6 7
)
ãã7 8
.
ãã8 9
ComputeHash
ãã9 D
(
ããD E

inputBytes
ããE O
)
ããO P
;
ããP Q
case
çç 
HashType
çç 
.
çç 
SHA256
çç $
:
çç$ %
return
çç& ,
SHA256
çç- 3
.
çç3 4
Create
çç4 :
(
çç: ;
)
çç; <
.
çç< =
ComputeHash
çç= H
(
ççH I

inputBytes
ççI S
)
ççS T
;
ççT U
case
èè 
HashType
èè 
.
èè 
SHA384
èè $
:
èè$ %
return
èè& ,
SHA384
èè- 3
.
èè3 4
Create
èè4 :
(
èè: ;
)
èè; <
.
èè< =
ComputeHash
èè= H
(
èèH I

inputBytes
èèI S
)
èèS T
;
èèT U
case
ëë 
HashType
ëë 
.
ëë 
SHA512
ëë $
:
ëë$ %
return
ëë& ,
SHA512
ëë- 3
.
ëë3 4
Create
ëë4 :
(
ëë: ;
)
ëë; <
.
ëë< =
ComputeHash
ëë= H
(
ëëH I

inputBytes
ëëI S
)
ëëS T
;
ëëT U
default
ìì 
:
ìì 
return
ìì 

inputBytes
ìì  *
;
ìì* +
}
îî 
}
ïï 	
private
ùù 
static
ùù 
string
ùù 
GetValue
ùù &
<
ùù& '
T
ùù' (
>
ùù( )
(
ùù) *
[
ùù* +
NotNull
ùù+ 2
]
ùù2 3
Match
ùù4 9
match
ùù: ?
,
ùù? @
T
ùùA B
data
ùùC G
)
ùùG H
{
ûû 	
var
üü 
paraName
üü 
=
üü 
match
üü  
.
üü  !
Groups
üü! '
[
üü' (
$num
üü( )
]
üü) *
.
üü* +
Value
üü+ 0
;
üü0 1
try
†† 
{
°° 
var
¢¢ 
proper
¢¢ 
=
¢¢ 
typeof
¢¢ #
(
¢¢# $
T
¢¢$ %
)
¢¢% &
.
¢¢& '
GetProperty
¢¢' 2
(
¢¢2 3
paraName
¢¢3 ;
)
¢¢; <
;
¢¢< =
return
££ 
proper
££ 
.
££ 
GetValue
££ &
(
££& '
data
££' +
)
££+ ,
.
££, -
ToString
££- 5
(
££5 6
)
££6 7
;
££7 8
}
§§ 
catch
•• 
(
•• 
	Exception
•• 
)
•• 
{
¶¶ 
var
ßß 
errMsg
ßß 
=
ßß 
$"
ßß 

Not find '
ßß )
{
ßß) *
paraName
ßß* 2
}
ßß2 3
'
ßß3 4
"
ßß4 5
;
ßß5 6
throw
®® 
new
®® 
ArgumentException
®® +
(
®®+ ,
errMsg
®®, 2
)
®®2 3
;
®®3 4
}
©© 
}
™™ 	
[
±± 	
SuppressMessage
±±	 
(
±± 
$str
±± $
,
±±$ %
$str
±±& :
,
±±: ;
Justification
±±< I
=
±±J K
$str
±±L c
)
±±c d
]
±±d e
public
≤≤ 
enum
≤≤ 
HashType
≤≤ 
{
≥≥ 	
MD5
µµ 
,
µµ 
SHA1
∏∏ 
,
∏∏ 
SHA256
ªª 
,
ªª 
SHA384
ææ 
,
ææ 
SHA512
¡¡ 
}
¬¬ 	
}
≈≈ 
}∆∆ éR
`C:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Extensions\ExtensionsT.cs
	namespace 	
Ustilz
 
. 

Extensions 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
ExtensionsT #
{ 
public 
static 
bool 
Between "
<" #
T# $
>$ %
(% &
[& '
NotNull' .
]. /
this0 4
T5 6
value7 <
,< =
T> ?
from@ D
,D E
TF G
toH J
)J K
where 
T 
: 
IComparable !
<! "
T" #
># $
=>% '
value( -
.- .
	CompareTo. 7
(7 8
from8 <
)< =
>=> @
$numA B
&&C E
valueF K
.K L
	CompareToL U
(U V
toV X
)X Y
<=Z \
$num] ^
;^ _
public"" 
static"" 
T"" 
Dump"" 
<"" 
T"" 
>"" 
(""  
this""  $
T""% &
o""' (
)""( )
{## 	
if$$ 
($$ 
o$$ 
is$$ 
IEnumerable$$  
list$$! %
)$$% &
{%% 
var&& 

enumerable&& 
=&&  
list&&! %
as&&& (
object&&) /
[&&/ 0
]&&0 1
??&&2 4
list&&5 9
.&&9 :
Cast&&: >
<&&> ?
object&&? E
>&&E F
(&&F G
)&&G H
.&&H I
ToArray&&I P
(&&P Q
)&&Q R
;&&R S
Console'' 
.'' 
	WriteLine'' !
(''! "
$str''" )
,'') *
string''+ 1
.''1 2
Join''2 6
(''6 7
$str''7 ;
,''; <

enumerable''= G
.''G H
Select''H N
(''N O
t''O P
=>''Q S
t''T U
.''U V
Dump''V Z
(''Z [
)''[ \
)''\ ]
.''] ^
ToArray''^ e
(''e f
)''f g
)''g h
)''h i
;''i j
return(( 
o(( 
;(( 
})) 
Console++ 
.++ 
	WriteLine++ 
(++ 
o++ 
)++  
;++  !
return,, 
o,, 
;,, 
}-- 	
public44 
static44 
bool44 
In44 
<44 
T44 
>44  
(44  !
this44! %
T44& '
value44( -
,44- .
params44/ 5
T446 7
[447 8
]448 9
list44: >
)44> ?
=>44@ B
list44C G
.44G H
Contains44H P
(44P Q
value44Q V
)44V W
;44W X
public:: 
static:: 
bool:: 
	IsNotNull:: $
<::$ %
T::% &
>::& '
(::' (
[::( )
	CanBeNull::) 2
]::2 3
this::4 8
T::9 :
source::; A
)::A B
where;; 
T;; 
:;; 
class;; 
=>;; 
source;; %
!=;;& (
null;;) -
;;;- .
publicAA 
staticAA 
boolAA 
IsNullAA !
<AA! "
TAA" #
>AA# $
(AA$ %
[AA% &
	CanBeNullAA& /
]AA/ 0
thisAA1 5
TAA6 7
sourceAA8 >
)AA> ?
whereBB 
TBB 
:BB 
classBB 
=>BB 
sourceBB %
==BB& (
nullBB) -
;BB- .
publicII 
staticII 
stringII 
JoinII !
<II! "
TII" #
>II# $
(II$ %
thisII% )
IEnumerableII* 5
<II5 6
TII6 7
>II7 8
tabII9 <
,II< =
stringII> D

separateurIIE O
)IIO P
=>IIQ S
stringIIT Z
.IIZ [
JoinII[ _
(II_ `

separateurII` j
,IIj k
tabIIl o
)IIo p
;IIp q
[OO 	
	CanBeNullOO	 
]OO 
publicPP 
staticPP 
stringPP 
LeftPP !
(PP! "
[PP" #
	CanBeNullPP# ,
]PP, -
thisPP. 2
stringPP3 9
valuePP: ?
,PP? @
intPPA D
lengthPPE K
)PPK L
=>PPM O
valuePPP U
!=PPV X
nullPPY ]
&&PP^ `
valuePPa f
.PPf g
LengthPPg m
>PPn o
lengthPPp v
?PPw x
valuePPy ~
.PP~ 
	Substring	PP à
(
PPà â
$num
PPâ ä
,
PPä ã
length
PPå í
)
PPí ì
:
PPî ï
value
PPñ õ
;
PPõ ú
[VV 	
	CanBeNullVV	 
]VV 
publicWW 
staticWW 
stringWW 
RightWW "
(WW" #
[WW# $
	CanBeNullWW$ -
]WW- .
thisWW/ 3
stringWW4 :
valueWW; @
,WW@ A
intWWB E
lengthWWF L
)WWL M
=>WWN P
valueWWQ V
!=WWW Y
nullWWZ ^
&&WW_ a
valueWWb g
.WWg h
LengthWWh n
>WWo p
lengthWWq w
?WWx y
valueWWz 
.	WW Ä
	Substring
WWÄ â
(
WWâ ä
value
WWä è
.
WWè ê
Length
WWê ñ
-
WWó ò
length
WWô ü
)
WWü †
:
WW° ¢
value
WW£ ®
;
WW® ©
public]] 
static]] 
T]] 
To]] 
<]] 
T]] 
>]] 
(]] 
[]] 
	CanBeNull]] (
]]]( )
this]]* .
IConvertible]]/ ;
value]]< A
)]]A B
{^^ 	
try__ 
{`` 
varaa 
taa 
=aa 
typeofaa 
(aa 
Taa  
)aa  !
;aa! "
varbb 
ubb 
=bb 
Nullablebb  
.bb  !
GetUnderlyingTypebb! 2
(bb2 3
tbb3 4
)bb4 5
;bb5 6
ifdd 
(dd 
udd 
!=dd 
nulldd 
)dd 
{ee 
ifff 
(ff 
valueff 
==ff  
nullff! %
||ff& (
valueff) .
.ff. /
Equalsff/ 5
(ff5 6
stringff6 <
.ff< =
Emptyff= B
)ffB C
)ffC D
{gg 
returnhh 
defaulthh &
(hh& '
Thh' (
)hh( )
;hh) *
}ii 
returnkk 
(kk 
Tkk 
)kk 
Convertkk %
.kk% &

ChangeTypekk& 0
(kk0 1
valuekk1 6
,kk6 7
ukk8 9
)kk9 :
;kk: ;
}ll 
ifnn 
(nn 
valuenn 
==nn 
nullnn !
||nn" $
valuenn% *
.nn* +
Equalsnn+ 1
(nn1 2
stringnn2 8
.nn8 9
Emptynn9 >
)nn> ?
)nn? @
{oo 
returnpp 
defaultpp "
(pp" #
Tpp# $
)pp$ %
;pp% &
}qq 
returnss 
(ss 
Tss 
)ss 
Convertss !
.ss! "

ChangeTypess" ,
(ss, -
valuess- 2
,ss2 3
tss4 5
)ss5 6
;ss6 7
}tt 
catchuu 
{vv 
returnww 
defaultww 
(ww 
Tww  
)ww  !
;ww! "
}xx 
}yy 	
public
ÄÄ 
static
ÄÄ 
T
ÄÄ 
To
ÄÄ 
<
ÄÄ 
T
ÄÄ 
>
ÄÄ 
(
ÄÄ 
[
ÄÄ 
	CanBeNull
ÄÄ (
]
ÄÄ( )
this
ÄÄ* .
IConvertible
ÄÄ/ ;
value
ÄÄ< A
,
ÄÄA B
IConvertible
ÄÄC O
ifError
ÄÄP W
)
ÄÄW X
{
ÅÅ 	
try
ÇÇ 
{
ÉÉ 
var
ÑÑ 
t
ÑÑ 
=
ÑÑ 
typeof
ÑÑ 
(
ÑÑ 
T
ÑÑ  
)
ÑÑ  !
;
ÑÑ! "
var
ÖÖ 
u
ÖÖ 
=
ÖÖ 
Nullable
ÖÖ  
.
ÖÖ  !
GetUnderlyingType
ÖÖ! 2
(
ÖÖ2 3
t
ÖÖ3 4
)
ÖÖ4 5
;
ÖÖ5 6
if
áá 
(
áá 
u
áá 
!=
áá 
null
áá 
)
áá 
{
àà 
if
ââ 
(
ââ 
value
ââ 
==
ââ  
null
ââ! %
||
ââ& (
value
ââ) .
.
ââ. /
Equals
ââ/ 5
(
ââ5 6
string
ââ6 <
.
ââ< =
Empty
ââ= B
)
ââB C
)
ââC D
{
ää 
return
ãã 
(
ãã  
T
ãã  !
)
ãã! "
ifError
ãã" )
;
ãã) *
}
åå 
return
éé 
(
éé 
T
éé 
)
éé 
Convert
éé %
.
éé% &

ChangeType
éé& 0
(
éé0 1
value
éé1 6
,
éé6 7
u
éé8 9
)
éé9 :
;
éé: ;
}
èè 
if
ëë 
(
ëë 
value
ëë 
==
ëë 
null
ëë !
||
ëë" $
value
ëë% *
.
ëë* +
Equals
ëë+ 1
(
ëë1 2
string
ëë2 8
.
ëë8 9
Empty
ëë9 >
)
ëë> ?
)
ëë? @
{
íí 
return
ìì 
ifError
ìì "
.
ìì" #
To
ìì# %
<
ìì% &
T
ìì& '
>
ìì' (
(
ìì( )
)
ìì) *
;
ìì* +
}
îî 
return
ññ 
(
ññ 
T
ññ 
)
ññ 
Convert
ññ !
.
ññ! "

ChangeType
ññ" ,
(
ññ, -
value
ññ- 2
,
ññ2 3
t
ññ4 5
)
ññ5 6
;
ññ6 7
}
óó 
catch
òò 
{
ôô 
return
öö 
(
öö 
T
öö 
)
öö 
ifError
öö !
;
öö! "
}
õõ 
}
úú 	
}
üü 
}†† £$
ZC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Http\HttpService.cs
	namespace 	
Ustilz
 
. 
Http 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
HttpService #
{ 
public 
static 
	TResponse 
Delete  &
<& '
	TResponse' 0
>0 1
(1 2
string2 8
url9 <
,< =
string> D
authentificationE U
)U V
=>W Y
throwZ _
new` c#
NotImplementedExceptiond {
({ |
)| }
;} ~
public$$ 
static$$ 
	TResponse$$ 
Get$$  #
<$$# $
	TResponse$$$ -
>$$- .
($$. /
string$$/ 5
url$$6 9
,$$9 :
string$$; A
authentification$$B R
)$$R S
{%% 	
var&& 
handler&& 
=&& 
new&& 
HttpClientHandler&& /
(&&/ 0
)&&0 1
;&&1 2
handler(( 
.(( 5
)ServerCertificateCustomValidationCallback(( =
+=((> @
(((A B
message((B I
,((I J
certificate2((K W
,((W X
arg3((Y ]
,((] ^
arg4((_ c
)((c d
=>((e g
true((h l
;((l m
var** 
client** 
=** 
new** 

HttpClient** '
(**' (
handler**( /
)**/ 0
;**0 1
if,, 
(,, 
!,, 
string,, 
.,, 
IsNullOrEmpty,, %
(,,% &
authentification,,& 6
),,6 7
),,7 8
{-- 
client.. 
... !
DefaultRequestHeaders.. ,
..., -
Authorization..- :
=..; <%
AuthenticationHeaderValue..= V
...V W
Parse..W \
(..\ ]
authentification..] m
)..m n
;..n o
}// 
try11 
{22 
var33 
response33 
=33 
client33 %
.33% &
GetStringAsync33& 4
(334 5
url335 8
)338 9
;339 :
return44 
response44 
.44  
Result44  &
.44& '
FromJson44' /
<44/ 0
	TResponse440 9
>449 :
(44: ;
)44; <
;44< =
}55 
catch66 
(66 
WebException66 
ex66  "
)66" #
{77 
var88 
errorResponse88 !
=88" #
ex88$ &
.88& '
Response88' /
;88/ 0
using:: 
(:: 
var:: 
responseStream:: )
=::* +
errorResponse::, 9
.::9 :
GetResponseStream::: K
(::K L
)::L M
)::M N
{;; 
if<< 
(<< 
responseStream<< &
==<<' )
null<<* .
)<<. /
{== 
throw>> 
;>> 
}?? 
varAA 
readerAA 
=AA  
newAA! $
StreamReaderAA% 1
(AA1 2
responseStreamAA2 @
,AA@ A
EncodingAAB J
.AAJ K
GetEncodingAAK V
(AAV W
$strAAW ^
)AA^ _
)AA_ `
;AA` a
varCC 
	errorTextCC !
=CC" #
readerCC$ *
.CC* +
	ReadToEndCC+ 4
(CC4 5
)CC5 6
;CC6 7
throwEE 
newEE 
WebExceptionEE *
(EE* +
	errorTextEE+ 4
)EE4 5
;EE5 6
}FF 
}GG 
}HH 	
publicOO 
staticOO 
	TResponseOO 
PostOO  $
<OO$ %
	TResponseOO% .
>OO. /
(OO/ 0
stringOO0 6
urlOO7 :
,OO: ;
stringOO< B
authentificationOOC S
)OOS T
=>OOU W
throwOOX ]
newOO^ a#
NotImplementedExceptionOOb y
(OOy z
)OOz {
;OO{ |
publicVV 
staticVV 
	TResponseVV 
PutVV  #
<VV# $
	TResponseVV$ -
>VV- .
(VV. /
stringVV/ 5
urlVV6 9
,VV9 :
stringVV; A
authentificationVVB R
)VVR S
=>VVT V
throwVVW \
newVV] `#
NotImplementedExceptionVVa x
(VVx y
)VVy z
;VVz {
}YY 
}ZZ Î

]C:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Json\JsonExtensions.cs
	namespace 	
Ustilz
 
. 
Json 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
JsonExtensions &
{ 
public 
static 
T 
FromJson  
<  !
T! "
>" #
(# $
this$ (
string) /
json0 4
)4 5
=>6 8
JsonConvert9 D
.D E
DeserializeObjectE V
<V W
TW X
>X Y
(Y Z
jsonZ ^
)^ _
;_ `
public 
static 
string 
ToJson #
<# $
T$ %
>% &
(& '
[' (
NotNull( /
]/ 0
this1 5
T6 7
obj8 ;
); <
=>= ?
JsonConvert@ K
.K L
SerializeObjectL [
([ \
obj\ _
,_ `
obja d
.d e
GetTypee l
(l m
)m n
,n o

Formattingp z
.z {
Indented	{ É
,
É Ñ
null
Ö â
)
â ä
;
ä ã
} 
} Ó
\C:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Programs\Programme.cs
	namespace 	
Ustilz
 
. 
Programs 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
	Programme !
{ 
public 
static 
void 

WithChoice %
(% &
[& '
NotNull' .
]. /
params0 6
Action7 =
[= >
]> ?
actions@ G
)G H
=>I K

WithChoiceL V
(V W
falseW \
,\ ]
actions^ e
)e f
;f g
public 
static 
void 

WithChoice %
(% &
bool& *
withExit+ 3
,3 4
[5 6
NotNull6 =
]= >
params? E
ActionF L
[L M
]M N
actionsO V
)V W
{ 	
IList 
< 
Action 
> 

enumerable $
=% &
actions' .
.. /
ToList/ 5
(5 6
)6 7
;7 8
do 
{ 
var   
i   
=   
$num   
;   
foreach!! 
(!! 
var!! 
action!! #
in!!$ &
actions!!' .
)!!. /
{"" 
Console## 
.## 
	WriteLine## %
(##% &
$str##& 0
,##0 1
i##2 3
++##3 5
,##5 6
action##7 =
.##= >
GetMethodInfo##> K
(##K L
)##L M
.##M N
Name##N R
)##R S
;##S T
}$$ 
if&& 
(&& 
withExit&& 
)&& 
{'' 
Console(( 
.(( 
	WriteLine(( %
(((% &
$str((& 1
,((1 2
i((3 4
)((4 5
;((5 6

enumerable)) 
.)) 
Add)) "
())" #
())# $
)))$ %
=>))& (
Environment))) 4
.))4 5
Exit))5 9
())9 :
-)): ;
$num)); <
)))< =
)))= >
;))> ?
}** 
if,, 
(,, 

enumerable,, 
.,, 
Count,, $
==,,% '
$num,,( )
),,) *
{-- 
return.. 
;.. 
}// 
var11 
entries11 
=11 
Console11 %
.11% &
ReadLine11& .
(11. /
)11/ 0
;110 1
foreach22 
(22 
var22 
entry22 "
in22# %
entries22& -
.22- .
Split22. 3
(223 4
$char224 7
)227 8
)228 9
{33 
var44 
isChoixNumerique44 (
=44) *
int44+ .
.44. /
TryParse44/ 7
(447 8
entry448 =
,44= >
out44? B
var44C F
choix44G L
)44L M
;44M N
if66 
(66 
!66 
isChoixNumerique66 )
||66* ,
choix66- 2
<=663 5

enumerable666 @
.66@ A
Count66A F
&&66G I
choix66J O
>66P Q
$num66R S
)66S T
{77 

enumerable88 "
[88" #
choix88# (
-88) *
$num88+ ,
]88, -
.88- .
Invoke88. 4
(884 5
)885 6
;886 7
}99 
}:: 
};; 
while<< 
(<< 
true<< 
)<< 
;<< 
}== 	
}@@ 
}AA Ì
XC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\Constantes.cs
	namespace 	
Ustilz
 
. 
Sql 
{ 
internal 
static 
class 

Constantes $
{ 
internal 
const 
string 
Egal "
=# $
$str% *
;* +
internal 
const 
string 
Space #
=$ %
$str& )
;) *
internal 
const 
string 
VirguleSpace *
=+ ,
$str- 1
;1 2
internal 
static 
class 
SQL !
{ 	
internal 
const 
string !

AllColumns" ,
=- .
$str/ 2
;2 3
internal$$ 
static$$ 
class$$ !
Keyword$$" )
{%% 
internal)) 
const)) 
string)) %
From))& *
=))+ ,
$str))- 3
;))3 4
internal,, 
const,, 
string,, %
Select,,& ,
=,,- .
$str,,/ 7
;,,7 8
internal33 
static33 
class33  %
Joinning33& .
{44 
internal88 
const88 "
string88# )
Cross88* /
=880 1
$str882 9
;889 :
internal;; 
const;; "
string;;# )
Full;;* .
=;;/ 0
$str;;1 7
;;;7 8
internal>> 
const>> "
string>># )
Inner>>* /
=>>0 1
$str>>2 9
;>>9 :
internalAA 
constAA "
stringAA# )
JoinAA* .
=AA/ 0
$strAA1 7
;AA7 8
internalDD 
constDD "
stringDD# )
LeftDD* .
=DD/ 0
$strDD1 7
;DD7 8
internalGG 
constGG "
stringGG# )
NaturalGG* 1
=GG2 3
$strGG4 =
;GG= >
internalJJ 
constJJ "
stringJJ# )
OnJJ* ,
=JJ- .
$strJJ/ 5
;JJ5 6
internalMM 
constMM "
stringMM# )
OuterMM* /
=MM0 1
$strMM2 9
;MM9 :
internalPP 
constPP "
stringPP# )
RightPP* /
=PP0 1
$strPP2 9
;PP9 :
internalSS 
constSS "
stringSS# )
SelfSS* .
=SS/ 0
$strSS1 7
;SS7 8
internalVV 
constVV "
stringVV# )
UnionVV* /
=VV0 1
$strVV2 9
;VV9 :
}YY 
internal`` 
static`` 
class``  %

Conditions``& 0
{aa 
publicee 
constee  
stringee! '
Andee( +
=ee, -
$stree. 3
;ee3 4
publichh 
consthh  
stringhh! '
Orhh( *
=hh+ ,
$strhh- 1
;hh1 2
internalkk 
constkk "
stringkk# )
Wherekk* /
=kk0 1
$strkk2 9
;kk9 :
}nn 
}qq 
}tt 	
}ww 
}xx í
\C:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\Enums\TypeJoin.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
Enums 
{ 
[

 
	PublicAPI

 
]

 
public 

enum 
TypeJoin 
{ 
	InnerJoin 
, 
	CrossJoin 
, 
LeftJoin 
, 
	RightJoin 
, 
FullJoin 
, 
SelfJoin 
, 
NaturalJoin   
,   
	UnionJoin## 
}$$ 
}%% ß
\C:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\FactoryRequest.cs
	namespace 	
Ustilz
 
. 
Sql 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
FactoryRequest &
{ 
[ 	
NotNull	 
] 
public 
static 
ISelectRequest $
GetSelectRequest% 5
(5 6
[6 7
NotNull7 >
]> ?
string@ F
nomTableG O
,O P
[Q R
NotNullR Y
]Y Z
string[ a
aliasb g
)g h
{ 	
return 
new 
SelectRequest $
($ %
nomTable% -
,- .
alias/ 4
)4 5
;5 6
} 	
} 
} Ó	
cC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\FactoryRequestElement.cs
	namespace 	
Ustilz
 
. 
Sql 
{ 
[ 
	PublicAPI 
] 
public 

static 
class !
FactoryRequestElement -
{ 
[ 	
NotNull	 
] 
public 
static 
IColumn 
CreateColumn *
(* +
ITable+ 1
table2 7
,7 8
string9 ?
alias@ E
)E F
{ 	
return 
new 
Column 
( 
table #
,# $
alias% *
)* +
;+ ,
} 	
[ 	
NotNull	 
] 
public   
static   
ITable   
CreateTable   (
(  ( )
string  ) /
nom  0 3
,  3 4
string  5 ;
alias  < A
)  A B
{!! 	
return"" 
new"" 
Table"" 
("" 
nom""  
,""  !
alias""" '
)""' (
;""( )
}## 	
}&& 
}'' Ú
dC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\IColumn.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
{ 
[

 
	PublicAPI

 
]

 
public 

	interface 
IColumn 
{ 
[ 	
	CanBeNull	 
] 
string 
Alias 
{ 
get 
; 
} 
bool 
HasAlias 
{ 
get 
; 
} 
[ 	
NotNull	 
] 
string 
Name 
{ 
get 
; 
} 
[ 	
NotNull	 
] 
ITable   

OwnerTable   
{   
get   
;    
}  ! "
string(( 
ToString(( 
((( 
)(( 
;(( 
string,, 
ToStringCondition,,  
(,,  !
),,! "
;,," #
}// 
}00 ™

eC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\IColumns.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
{ 
[ 
	PublicAPI 
] 
public 

	interface 
IColumns 
: 
IList  %
<% &
IColumn& -
>- .
{ 
[ 	
NotNull	 
] 
ITable 

OwnerTable 
{ 
get 
;  
}! "
[ 	
ContractAnnotation	 
( 
$str 4
)4 5
]5 6
void 
Add 
( 
[ 
NotNull 
] 
string !
	nomColumn" +
)+ ,
;, -
void"" 
Add"" 
("" 
["" 
NotNull"" 
]"" 
string"" !
	nomColumn""" +
,""+ ,
[""- .
	CanBeNull"". 7
]""7 8
string""9 ?
alias""@ E
)""E F
;""F G
string&& 
[&& 
]&& 
ToStringArray&& 
(&& 
)&&  
;&&  !
})) 
}** ‰
gC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\ICondition.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
{ 
[

 
	PublicAPI

 
]

 
public 

	interface 

ICondition 
{ 
string 
ToString 
( 
) 
; 
} 
} ô
bC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\IJoin.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
{ 
[ 
	PublicAPI 
] 
public 

	interface 
IJoin 
{ 
[ 	
NotNull	 
] 
ITable 
	JoinTable 
{ 
get 
; 
}  !
[ 	
NotNull	 
] 
IColumn 
OtherColumn 
{ 
get !
;! "
}# $
[ 	
NotNull	 
] 
IColumn 

RootColumn 
{ 
get  
;  !
}" #
TypeJoin!! 
Type!! 
{!! 
get!! 
;!! 
}!! 
string)) 
ToString)) 
()) 
))) 
;)) 
},, 
}-- µ
cC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\IJoins.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
{ 
[ 
	PublicAPI 
] 
public 

	interface 
IJoins 
: 
IList #
<# $
IJoin$ )
>) *
{ 
new 
void 
Add 
( 
IJoin 
item 
)  
;  !
string 
ToString 
( 
) 
; 
} 
} ∂
sC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\Implementations\Column.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
.# $
Implementations$ 3
{ 
[

 '
CannotApplyEqualityOperator

  
]

  !
internal 
sealed 
class 
Column  
:! "
IColumn# *
{ 
public 
Column 
( 
ITable 
table "
," #
string$ *
name+ /
,/ 0
string1 7
alias8 =
=> ?
null@ D
)D E
{ 	
this 
. 

OwnerTable 
= 
table #
;# $
this 
. 
Name 
= 
name 
; 
this 
. 
Alias 
= 
alias 
; 
} 	
public   
string   
Alias   
{   
get   !
;  ! "
private  # *
set  + .
;  . /
}  0 1
public$$ 
bool$$ 
HasAlias$$ 
=>$$ 
!$$  !
string$$! '
.$$' (
IsNullOrEmpty$$( 5
($$5 6
this$$6 :
.$$: ;
Alias$$; @
)$$@ A
;$$A B
public(( 
string(( 
Name(( 
{(( 
get((  
;((  !
private((" )
set((* -
;((- .
}((/ 0
public,, 
ITable,, 

OwnerTable,,  
{,,! "
get,,# &
;,,& '
private,,( /
set,,0 3
;,,3 4
},,5 6
public44 
override44 
string44 
ToString44 '
(44' (
)44( )
{55 	
return66 
this66 
.66 
HasAlias66  
?66! "
$"66# %
{66% &
this66& *
.66* +
Name66+ /
}66/ 0
 as 660 4
{664 5
this665 9
.669 :
Alias66: ?
}66? @
"66@ A
:66B C
this66D H
.66H I
Name66I M
;66M N
}77 	
public;; 
string;; 
ToStringCondition;; '
(;;' (
);;( )
{<< 	
return== 
this== 
.== 

OwnerTable== "
.==" #
HasAlias==# +
?==, -
$"==. 0
{==0 1
this==1 5
.==5 6

OwnerTable==6 @
.==@ A
Alias==A F
}==F G
.==G H
{==H I
this==I M
.==M N
Name==N R
}==R S
"==S T
:==U V
this==W [
.==[ \
Name==\ `
;==` a
}>> 	
}AA 
}BB Û
tC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\Implementations\Columns.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
.# $
Implementations$ 3
{ 
[ 
	PublicAPI 
] 
internal 
sealed 
class 
Columns !
:" #
List$ (
<( )
IColumn) 0
>0 1
,1 2
IColumns3 ;
{ 
private 
const 
string !
MSG_NOM_COLONNE_NULLE 2
=3 4
$str5 c
;c d
public 
Columns 
( 
[ 
NotNull 
]  
ITable! '

ownerTable( 2
)2 3
{ 	
this 
. 

OwnerTable 
= 

ownerTable (
;( )
} 	
public'' 
ITable'' 

OwnerTable''  
{''! "
get''# &
;''& '
private''( /
set''0 3
;''3 4
}''5 6
[// 	
ContractAnnotation//	 
(// 
$str// 4
)//4 5
]//5 6
public00 
void00 
Add00 
(00 
string00 
	nomColumn00 (
)00( )
{11 	
if22 
(22 
string22 
.22 
IsNullOrEmpty22 $
(22$ %
	nomColumn22% .
)22. /
)22/ 0
{33 
throw44 
new44 !
ArgumentNullException44 /
(44/ 0
nameof440 6
(446 7
	nomColumn447 @
)44@ A
,44A B!
MSG_NOM_COLONNE_NULLE44C X
)44X Y
;44Y Z
}55 
this77 
.77 
Add77 
(77 
new77 
Column77 
(77  
this77  $
.77$ %

OwnerTable77% /
,77/ 0
	nomColumn771 :
)77: ;
)77; <
;77< =
}88 	
public== 
void== 
Add== 
(== 
string== 
	nomColumn== (
,==( )
string==* 0
alias==1 6
)==6 7
{>> 	
if?? 
(?? 
string?? 
.?? 
IsNullOrEmpty?? $
(??$ %
	nomColumn??% .
)??. /
)??/ 0
{@@ 
throwAA 
newAA !
ArgumentNullExceptionAA /
(AA/ 0
nameofAA0 6
(AA6 7
	nomColumnAA7 @
)AA@ A
,AAA B!
MSG_NOM_COLONNE_NULLEAAC X
)AAX Y
;AAY Z
}BB 
thisDD 
.DD 
AddDD 
(DD 
newDD 
ColumnDD 
(DD  
thisDD  $
.DD$ %

OwnerTableDD% /
,DD/ 0
	nomColumnDD1 :
,DD: ;
aliasDD< A
)DDA B
)DDB C
;DDC D
}EE 	
publicII 
stringII 
[II 
]II 
ToStringArrayII %
(II% &
)II& '
{JJ 	
returnKK 
thisKK 
.KK 
SelectKK 
(KK 
columnKK %
=>KK& (
columnKK) /
.KK/ 0
ToStringKK0 8
(KK8 9
)KK9 :
)KK: ;
.KK; <
ToArrayKK< C
(KKC D
)KKD E
;KKE F
}LL 	
}OO 
}PP æ
vC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\Implementations\Condition.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
.# $
Implementations$ 3
{ 
internal

 
sealed

 
class

 
	Condition

 #
:

$ %

ICondition

& 0
{ 
private 
readonly 
IColumn  

leftMember! +
;+ ,
private 
readonly 
IColumn  
rightMember! ,
;, -
public 
	Condition 
( 
IColumn  
rightMember! ,
,, -
IColumn. 5

leftMember6 @
)@ A
{ 	
this 
. 
rightMember 
= 
rightMember *
;* +
this 
. 

leftMember 
= 

leftMember (
;( )
}   	
public(( 
override(( 
string(( 
ToString(( '
(((' (
)((( )
{)) 	
var** 
sb** 
=** 
new** 
StringBuilder** &
(**& '
)**' (
;**( )
sb++ 
.++ 
Append++ 
(++ 
this++ 
.++ 

leftMember++ %
.++% &
ToStringCondition++& 7
(++7 8
)++8 9
)++9 :
;++: ;
sb,, 
.,, 
Append,, 
(,, 

Constantes,,  
.,,  !
Egal,,! %
),,% &
;,,& '
sb-- 
.-- 
Append-- 
(-- 
this-- 
.-- 
rightMember-- &
.--& '
ToStringCondition--' 8
(--8 9
)--9 :
)--: ;
;--; <
return.. 
sb.. 
... 
ToString.. 
(.. 
)..  
;..  !
}// 	
}22 
}33 ˘J
qC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\Implementations\Join.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
.# $
Implementations$ 3
{ 
internal 
sealed 
class 
Join 
:  
IJoin! &
{ 
internal 
Join 
( 
TypeJoin 
type #
,# $
ITable% +
	joinTable, 5
,5 6
IColumn7 >
otherColumn? J
,J K
IColumnL S

rootColumnT ^
)^ _
{ 	
this 
. 
Type 
= 
type 
; 
this 
. 
	JoinTable 
= 
	joinTable &
;& '
this 
. 

RootColumn 
= 

rootColumn (
;( )
this 
. 
OtherColumn 
= 
otherColumn *
;* +
} 	
public%% 
ITable%% 
	JoinTable%% 
{%%  !
get%%" %
;%%% &
}%%' (
public** 
IColumn** 
OtherColumn** "
{**# $
get**% (
;**( )
}*** +
public// 
IColumn// 

RootColumn// !
{//" #
get//$ '
;//' (
}//) *
public44 
TypeJoin44 
Type44 
{44 
get44 "
;44" #
}44$ %
public== 
override== 
string== 
ToString== '
(==' (
)==( )
{>> 	
var?? 
sql?? 
=?? 
new?? 
StringBuilder?? '
(??' (

Constantes??( 2
.??2 3
Space??3 8
)??8 9
;??9 :
switch@@ 
(@@ 
this@@ 
.@@ 
Type@@ 
)@@ 
{AA 
caseBB 
TypeJoinBB 
.BB 
	InnerJoinBB '
:BB' (
sqlCC 
.CC 
AppendCC 
(CC 

ConstantesCC )
.CC) *
SQLCC* -
.CC- .
KeywordCC. 5
.CC5 6
JoinningCC6 >
.CC> ?
InnerCC? D
)CCD E
.CCE F
AppendCCF L
(CCL M

ConstantesCCM W
.CCW X
SpaceCCX ]
)CC] ^
.CC^ _
AppendCC_ e
(CCe f

ConstantesCCf p
.CCp q
SQLCCq t
.CCt u
KeywordCCu |
.CC| }
Joinning	CC} Ö
.
CCÖ Ü
Join
CCÜ ä
)
CCä ã
;
CCã å
breakDD 
;DD 
caseEE 
TypeJoinEE 
.EE 
	CrossJoinEE '
:EE' (
sqlFF 
.FF 
AppendFF 
(FF 

ConstantesFF )
.FF) *
SQLFF* -
.FF- .
KeywordFF. 5
.FF5 6
JoinningFF6 >
.FF> ?
CrossFF? D
)FFD E
.FFE F
AppendFFF L
(FFL M

ConstantesFFM W
.FFW X
SpaceFFX ]
)FF] ^
.FF^ _
AppendFF_ e
(FFe f

ConstantesFFf p
.FFp q
SQLFFq t
.FFt u
KeywordFFu |
.FF| }
Joinning	FF} Ö
.
FFÖ Ü
Join
FFÜ ä
)
FFä ã
;
FFã å
breakGG 
;GG 
caseHH 
TypeJoinHH 
.HH 
LeftJoinHH &
:HH& '
sqlII 
.II 
AppendII 
(II 

ConstantesII )
.II) *
SQLII* -
.II- .
KeywordII. 5
.II5 6
JoinningII6 >
.II> ?
LeftII? C
)IIC D
.IID E
AppendIIE K
(IIK L

ConstantesIIL V
.IIV W
SpaceIIW \
)II\ ]
.II] ^
AppendII^ d
(IId e

ConstantesIIe o
.IIo p
SQLIIp s
.IIs t
KeywordIIt {
.II{ |
Joinning	II| Ñ
.
IIÑ Ö
Join
IIÖ â
)
IIâ ä
;
IIä ã
breakJJ 
;JJ 
caseKK 
TypeJoinKK 
.KK 
	RightJoinKK '
:KK' (
sqlLL 
.LL 
AppendLL 
(LL 

ConstantesLL )
.LL) *
SQLLL* -
.LL- .
KeywordLL. 5
.LL5 6
JoinningLL6 >
.LL> ?
RightLL? D
)LLD E
.LLE F
AppendLLF L
(LLL M

ConstantesLLM W
.LLW X
SpaceLLX ]
)LL] ^
.LL^ _
AppendLL_ e
(LLe f

ConstantesLLf p
.LLp q
SQLLLq t
.LLt u
KeywordLLu |
.LL| }
Joinning	LL} Ö
.
LLÖ Ü
Join
LLÜ ä
)
LLä ã
;
LLã å
breakMM 
;MM 
caseNN 
TypeJoinNN 
.NN 
FullJoinNN &
:NN& '
sqlOO 
.OO 
AppendOO 
(OO 

ConstantesOO )
.OO) *
SQLOO* -
.OO- .
KeywordOO. 5
.OO5 6
JoinningOO6 >
.OO> ?
FullOO? C
)OOC D
.OOD E
AppendOOE K
(OOK L

ConstantesOOL V
.OOV W
SpaceOOW \
)OO\ ]
.OO] ^
AppendOO^ d
(OOd e

ConstantesOOe o
.OOo p
SQLOOp s
.OOs t
KeywordOOt {
.OO{ |
Joinning	OO| Ñ
.
OOÑ Ö
Join
OOÖ â
)
OOâ ä
;
OOä ã
breakPP 
;PP 
caseQQ 
TypeJoinQQ 
.QQ 
SelfJoinQQ &
:QQ& '
sqlRR 
.RR 
AppendRR 
(RR 

ConstantesRR )
.RR) *
SQLRR* -
.RR- .
KeywordRR. 5
.RR5 6
JoinningRR6 >
.RR> ?
SelfRR? C
)RRC D
.RRD E
AppendRRE K
(RRK L

ConstantesRRL V
.RRV W
SpaceRRW \
)RR\ ]
.RR] ^
AppendRR^ d
(RRd e

ConstantesRRe o
.RRo p
SQLRRp s
.RRs t
KeywordRRt {
.RR{ |
Joinning	RR| Ñ
.
RRÑ Ö
Join
RRÖ â
)
RRâ ä
;
RRä ã
breakSS 
;SS 
caseTT 
TypeJoinTT 
.TT 
NaturalJoinTT )
:TT) *
sqlUU 
.UU 
AppendUU 
(UU 

ConstantesUU )
.UU) *
SQLUU* -
.UU- .
KeywordUU. 5
.UU5 6
JoinningUU6 >
.UU> ?
NaturalUU? F
)UUF G
.UUG H
AppendUUH N
(UUN O

ConstantesUUO Y
.UUY Z
SpaceUUZ _
)UU_ `
.UU` a
AppendUUa g
(UUg h

ConstantesUUh r
.UUr s
SQLUUs v
.UUv w
KeywordUUw ~
.UU~ 
Joinning	UU á
.
UUá à
Join
UUà å
)
UUå ç
;
UUç é
breakVV 
;VV 
caseWW 
TypeJoinWW 
.WW 
	UnionJoinWW '
:WW' (
sqlXX 
.XX 
AppendXX 
(XX 

ConstantesXX )
.XX) *
SQLXX* -
.XX- .
KeywordXX. 5
.XX5 6
JoinningXX6 >
.XX> ?
UnionXX? D
)XXD E
.XXE F
AppendXXF L
(XXL M

ConstantesXXM W
.XXW X
SpaceXXX ]
)XX] ^
.XX^ _
AppendXX_ e
(XXe f

ConstantesXXf p
.XXp q
SQLXXq t
.XXt u
KeywordXXu |
.XX| }
Joinning	XX} Ö
.
XXÖ Ü
Join
XXÜ ä
)
XXä ã
;
XXã å
breakYY 
;YY 
defaultZZ 
:ZZ 
sql[[ 
.[[ 
Append[[ 
([[ 
string[[ %
.[[% &
Empty[[& +
)[[+ ,
;[[, -
break\\ 
;\\ 
}]] 
sql__ 
.__ 
Append__ 
(__ 

Constantes__ !
.__! "
Space__" '
)__' (
;__( )
sqlaa 
.aa 
Appendaa 
(aa 
thisaa 
.aa 
	JoinTableaa %
)aa% &
;aa& '
sqlcc 
.cc 
Appendcc 
(cc 

Constantescc !
.cc! "
SQLcc" %
.cc% &
Keywordcc& -
.cc- .
Joinningcc. 6
.cc6 7
Oncc7 9
)cc9 :
;cc: ;
sqlee 
.ee 
Appendee 
(ee 
thisee 
.ee 

RootColumnee &
.ee& '
ToStringConditionee' 8
(ee8 9
)ee9 :
)ee: ;
.ee; <
Appendee< B
(eeB C

ConstanteseeC M
.eeM N
EgaleeN R
)eeR S
.eeS T
AppendeeT Z
(eeZ [
thisee[ _
.ee_ `
OtherColumnee` k
.eek l
ToStringConditioneel }
(ee} ~
)ee~ 
)	ee Ä
;
eeÄ Å
returngg 
sqlgg 
.gg 
ToStringgg 
(gg  
)gg  !
;gg! "
}hh 	
}kk 
}ll ≈
rC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\Implementations\Joins.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
.# $
Implementations$ 3
{ 
internal 
sealed 
class 
Joins 
:  !
List" &
<& '
IJoin' ,
>, -
,- .
IJoins/ 5
{ 
public 
new 
void 
Add 
( 
IJoin !
item" &
)& '
{ 	
base 
. 
Add 
( 
item 
) 
; 
} 	
public 
override 
string 
ToString '
(' (
)( )
{ 	
var 
sql 
= 
new 
StringBuilder '
(' (
)( )
;) *
foreach 
( 
var 
join 
in  
this! %
)% &
{ 
sql 
. 
Append 
( 
join 
)  
;  !
} 
return   
sql   
.   
ToString   
(    
)    !
;  ! "
}!! 	
}$$ 
}%% π
rC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\Implementations\Table.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
.# $
Implementations$ 3
{ 
internal 
sealed 
class 
Table 
:  !
ITable" (
{ 
public 
Table 
( 
string 
name  
,  !
string" (
alias) .
=/ 0
null1 5
)5 6
{ 	
this 
. 
Name 
= 
name 
; 
this 
. 
Alias 
= 
alias 
; 
} 	
public 
string 
Alias 
{ 
get !
;! "
private# *
set+ .
;. /
}0 1
public 
bool 
HasAlias 
=> 
!  !
string! '
.' (
IsNullOrEmpty( 5
(5 6
this6 :
.: ;
Alias; @
)@ A
;A B
public   
string   
Name   
{   
get    
;    !
private  " )
set  * -
;  - .
}  / 0
public(( 
override(( 
string(( 
ToString(( '
(((' (
)((( )
{)) 	
return** 
this** 
.** 
HasAlias**  
?**! "
$"**# %
{**% &
this**& *
.*** +
Name**+ /
}**/ 0
{**1 2
this**2 6
.**6 7
Alias**7 <
}**< =
"**= >
:**? @
this**A E
.**E F
Name**F J
;**J K
}++ 	
}.. 
}// ¢
xC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\Implementations\WhereClause.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
.# $
Implementations$ 3
{ 
[ 
	PublicAPI 
] 
internal 
sealed 
class 
WhereClause %
:& '
IWhereClause( 4
{ 
internal 
WhereClause 
( 

ICondition '
firstCondition( 6
)6 7
{ 	
this 
. 
FirstCondition 
=  !
new" %
WhereCondition& 4
(4 5
firstCondition5 C
)C D
;D E
} 	
public 
IWhereCondition 
FirstCondition -
{. /
get0 3
;3 4
private5 <
set= @
;@ A
}B C
public'' 
void'' 
AddCondition''  
(''  !

ICondition''! +
	condition'', 5
)''5 6
{(( 	
this)) 
.)) 
FirstCondition)) 
=))  !
new))" %
WhereCondition))& 4
())4 5
	condition))5 >
)))> ?
;))? @
}** 	
public.. 
override.. 
string.. 
ToString.. '
(..' (
)..( )
{// 	
var00 
whereBuilder00 
=00 
new00 "
StringBuilder00# 0
(000 1

Constantes001 ;
.00; <
Space00< A
)00A B
;00B C
whereBuilder11 
.11 
Append11 
(11  

Constantes11  *
.11* +
SQL11+ .
.11. /
Keyword11/ 6
.116 7

Conditions117 A
.11A B
Where11B G
)11G H
;11H I
whereBuilder22 
.22 
Append22 
(22  
this22  $
.22$ %
FirstCondition22% 3
)223 4
;224 5
return33 
whereBuilder33 
.33  
ToString33  (
(33( )
)33) *
;33* +
}44 	
}77 
}88 í!
{C:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\Implementations\WhereCondition.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
.# $
Implementations$ 3
{ 
internal 
sealed 
class 
WhereCondition (
:) *
IWhereCondition+ :
{ 
[ 	
SuppressMessage	 
( 
$str 6
,6 7
$str8 f
,f g
Justificationh u
=v w
$str	x õ
)
õ ú
]
ú ù
internal 
WhereCondition 
(  

ICondition  *
	condition+ 4
,4 5
IWhereCondition6 E
andConditionF R
=S T
nullU Y
,Y Z
IWhereCondition[ j
orConditionk v
=w x
nully }
)} ~
{ 	
if 
( 
	condition 
== 
null !
)! "
{ 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7
	condition7 @
)@ A
)A B
;B C
} 
this 
. 
OrCondition 
= 
orCondition *
;* +
this 
. 
	Condition 
= 
	condition &
;& '
this 
. 
AndCondition 
= 
andCondition  ,
;, -
}   	
public(( 
IWhereCondition(( 
AndCondition(( +
{((, -
get((. 1
;((1 2
}((3 4
public,, 

ICondition,, 
	Condition,, #
{,,$ %
get,,& )
;,,) *
},,+ ,
[00 	
SuppressMessage00	 
(00 
$str00 6
,006 7
$str008 f
,00f g
Justification00h u
=00v w
$str	00x õ
)
00õ ú
]
00ú ù
public11 
IWhereCondition11 
OrCondition11 *
{11+ ,
get11- 0
;110 1
}112 3
public99 
override99 
string99 
ToString99 '
(99' (
)99( )
{:: 	
var;; !
whereConditionBuilder;; %
=;;& '
new;;( +
StringBuilder;;, 9
(;;9 :

Constantes;;: D
.;;D E
Space;;E J
);;J K
;;;K L!
whereConditionBuilder== !
.==! "
Append==" (
(==( )
this==) -
.==- .
	Condition==. 7
)==7 8
;==8 9
if?? 
(?? 
this?? 
.?? 
AndCondition?? !
!=??" $
null??% )
)??) *
{@@ !
whereConditionBuilderAA %
.AA% &
AppendAA& ,
(AA, -

ConstantesAA- 7
.AA7 8
SQLAA8 ;
.AA; <
KeywordAA< C
.AAC D

ConditionsAAD N
.AAN O
AndAAO R
)AAR S
;AAS T!
whereConditionBuilderBB %
.BB% &
AppendBB& ,
(BB, -
thisBB- 1
.BB1 2
AndConditionBB2 >
)BB> ?
;BB? @
}CC 
ifEE 
(EE 
thisEE 
.EE 
OrConditionEE  
!=EE! #
nullEE$ (
)EE( )
{FF !
whereConditionBuilderGG %
.GG% &
AppendGG& ,
(GG, -

ConstantesGG- 7
.GG7 8
SQLGG8 ;
.GG; <
KeywordGG< C
.GGC D

ConditionsGGD N
.GGN O
OrGGO Q
)GGQ R
;GGR S!
whereConditionBuilderHH %
.HH% &
AppendHH& ,
(HH, -
thisHH- 1
.HH1 2
OrConditionHH2 =
)HH= >
;HH> ?
}II 
returnKK !
whereConditionBuilderKK (
.KK( )
ToStringKK) 1
(KK1 2
)KK2 3
;KK3 4
}LL 	
}OO 
}PP Û
cC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\ITable.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
{ 
[

 
	PublicAPI

 
]

 
public 

	interface 
ITable 
{ 
[ 	
	CanBeNull	 
] 
string 
Alias 
{ 
get 
; 
} 
bool 
HasAlias 
{ 
get 
; 
} 
[ 	
NotNull	 
] 
string 
Name 
{ 
get 
; 
} 
string## 
ToString## 
(## 
)## 
;## 
}&& 
}'' ª
iC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\IWhereClause.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
{ 
[

 
	PublicAPI

 
]

 
public 

	interface 
IWhereClause !
{ 
[ 	
NotNull	 
] 
IWhereCondition 
FirstCondition &
{' (
get) ,
;, -
}. /
} 
} ä
lC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestElement\IWhereCondition.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestElement #
{ 
[

 
	PublicAPI

 
]

 
public 

	interface 
IWhereCondition $
{ 
[ 	
	CanBeNull	 
] 
IWhereCondition 
AndCondition $
{% &
get' *
;* +
}, -
[ 	
NotNull	 
] 

ICondition 
	Condition 
{ 
get "
;" #
}$ %
[ 	
	CanBeNull	 
] 
IWhereCondition 
OrCondition #
{$ %
get& )
;) *
}+ ,
} 
}   ‰L
wC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestType\Implementations\SelectRequest.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestType  
.  !
Implementations! 0
{ 
[ 
	PublicAPI 
] 
internal 
sealed 
class 
SelectRequest '
:( )
ISelectRequest* 8
{ 
[ 	
NotNull	 
] 
private 
readonly 
Joins 
joins $
;$ %
[ 	
NotNull	 
] 
private 
readonly 
List 
< 
string $
>$ %
listeColumns& 2
;2 3
[   	
NotNull  	 
]   
private!! 
readonly!! 
IColumns!! !
selectColumns!!" /
;!!/ 0
[$$ 	
	CanBeNull$$	 
]$$ 
private%% 
WhereClause%% 
whereClause%% '
;%%' (
internal.. 
SelectRequest.. 
(.. 
string.. %
nomTable..& .
)... /
:// 
this// 
(// 
)// 
{00 	
this11 
.11 
listeColumns11 
=11 
new11  #
List11$ (
<11( )
string11) /
>11/ 0
(110 1
)111 2
;112 3
this22 
.22 
PrincipalTable22 
=22  !
new22" %
Table22& +
(22+ ,
nomTable22, 4
)224 5
;225 6
this33 
.33 
selectColumns33 
=33  
new33! $
Columns33% ,
(33, -
this33- 1
.331 2
PrincipalTable332 @
)33@ A
;33A B
this44 
.44 
joins44 
=44 
new44 
Joins44 "
(44" #
)44# $
;44$ %
}55 	
internal;; 
SelectRequest;; 
(;; 
string;; %
nomTable;;& .
,;;. /
string;;0 6
alias;;7 <
);;< =
:<< 
this<< 
(<< 
nomTable<< 
)<< 
=><< 
this== 
.== 
PrincipalTable== 
===  !
new==" %
Table==& +
(==+ ,
nomTable==, 4
,==4 5
alias==6 ;
)==; <
;==< =
private@@ 
SelectRequest@@ 
(@@ 
)@@ 
{AA 	
}BB 	
publicKK 
boolKK 
UpperSQLKK 
{KK 
getKK "
;KK" #
setKK$ '
;KK' (
}KK) *
[OO 	
NotNullOO	 
]OO 
publicPP 
ITablePP 
PrincipalTablePP $
{PP% &
getPP' *
;PP* +
privatePP, 3
setPP4 7
;PP7 8
}PP9 :
publicTT 
IWhereClauseTT 
WhereClauseTT '
=>TT( *
thisTT+ /
.TT/ 0
whereClauseTT0 ;
;TT; <
public\\ 
void\\ 
AddFirstWhereClause\\ '
(\\' (

ICondition\\( 2
	condition\\3 <
)\\< =
{]] 	
this^^ 
.^^ 
whereClause^^ 
=^^ 
new^^ "
WhereClause^^# .
(^^. /
	condition^^/ 8
)^^8 9
;^^9 :
}__ 	
publicff 
voidff 
AddJoinff 
(ff 
TypeJoinff $
typeJoinff% -
,ff- .
stringff/ 5
otherColumnff6 A
,ffA B
ITableffC I
	tableJoinffJ S
,ffS T
stringffU [

rootColumnff\ f
)fff g
{gg 	
varhh 

jointureT1hh 
=hh 
newhh  
Joinhh! %
(hh% &
typeJoinhh& .
,hh. /
	tableJoinhh0 9
,hh9 :
newhh; >
Columnhh? E
(hhE F
thishhF J
.hhJ K
PrincipalTablehhK Y
,hhY Z
otherColumnhh[ f
)hhf g
,hhg h
newhhi l
Columnhhm s
(hhs t
	tableJoinhht }
,hh} ~

rootColumn	hh â
)
hhâ ä
)
hhä ã
;
hhã å
thisii 
.ii 
joinsii 
.ii 
Addii 
(ii 

jointureT1ii %
)ii% &
;ii& '
}jj 	
publicnn 
voidnn 
AddSelectColumnnn #
(nn# $
stringnn$ *
colnn+ .
)nn. /
{oo 	
thispp 
.pp 
selectColumnspp 
.pp 
Addpp "
(pp" #
colpp# &
)pp& '
;pp' (
}qq 	
publicvv 
voidvv 
AddSelectColumnvv #
(vv# $
stringvv$ *
colvv+ .
,vv. /
stringvv0 6
aliasvv7 <
)vv< =
{ww 	
thisxx 
.xx 
selectColumnsxx 
.xx 
Addxx "
(xx" #
colxx# &
,xx& '
aliasxx( -
)xx- .
;xx. /
}yy 	
[}} 	
Pure}}	 
]}} 
public~~ 
string~~ 
ToSql~~ 
(~~ 
)~~ 
{ 	
var
ÄÄ 
sql
ÄÄ 
=
ÄÄ 
new
ÄÄ 
StringBuilder
ÄÄ '
(
ÄÄ' (
)
ÄÄ( )
;
ÄÄ) *
sql
ÅÅ 
.
ÅÅ 
Append
ÅÅ 
(
ÅÅ 

Constantes
ÅÅ !
.
ÅÅ! "
SQL
ÅÅ" %
.
ÅÅ% &
Keyword
ÅÅ& -
.
ÅÅ- .
Select
ÅÅ. 4
)
ÅÅ4 5
;
ÅÅ5 6
sql
ÇÇ 
.
ÇÇ 
Append
ÇÇ 
(
ÇÇ 

Constantes
ÇÇ !
.
ÇÇ! "
Space
ÇÇ" '
)
ÇÇ' (
;
ÇÇ( )
if
ÉÉ 
(
ÉÉ 
!
ÉÉ 
this
ÉÉ 
.
ÉÉ !
HasColumnsSpecified
ÉÉ )
(
ÉÉ) *
)
ÉÉ* +
)
ÉÉ+ ,
{
ÑÑ 
sql
ÖÖ 
.
ÖÖ 
Append
ÖÖ 
(
ÖÖ 

Constantes
ÖÖ %
.
ÖÖ% &
SQL
ÖÖ& )
.
ÖÖ) *

AllColumns
ÖÖ* 4
)
ÖÖ4 5
;
ÖÖ5 6
sql
ÜÜ 
.
ÜÜ 
Append
ÜÜ 
(
ÜÜ 

Constantes
ÜÜ %
.
ÜÜ% &
Space
ÜÜ& +
)
ÜÜ+ ,
;
ÜÜ, -
}
áá 
else
àà 
{
ââ 
sql
ää 
.
ää 
Append
ää 
(
ää 
string
ää !
.
ää! "
Join
ää" &
(
ää& '

Constantes
ää' 1
.
ää1 2
VirguleSpace
ää2 >
,
ää> ?
this
ää@ D
.
ääD E
listeColumns
ääE Q
.
ääQ R
ToArray
ääR Y
(
ääY Z
)
ääZ [
)
ää[ \
)
ää\ ]
;
ää] ^
sql
ãã 
.
ãã 
Append
ãã 
(
ãã 
string
ãã !
.
ãã! "
Join
ãã" &
(
ãã& '

Constantes
ãã' 1
.
ãã1 2
VirguleSpace
ãã2 >
,
ãã> ?
this
ãã@ D
.
ããD E
selectColumns
ããE R
.
ããR S
ToStringArray
ããS `
(
ãã` a
)
ããa b
)
ããb c
)
ããc d
;
ããd e
}
åå 
sql
éé 
.
éé 
Append
éé 
(
éé 

Constantes
éé !
.
éé! "
Space
éé" '
)
éé' (
;
éé( )
sql
èè 
.
èè 
Append
èè 
(
èè 

Constantes
èè !
.
èè! "
SQL
èè" %
.
èè% &
Keyword
èè& -
.
èè- .
From
èè. 2
)
èè2 3
;
èè3 4
sql
ëë 
.
ëë 
Append
ëë 
(
ëë 

Constantes
ëë !
.
ëë! "
Space
ëë" '
)
ëë' (
;
ëë( )
sql
íí 
.
íí 
Append
íí 
(
íí 
this
íí 
.
íí 
PrincipalTable
íí *
)
íí* +
;
íí+ ,
if
îî 
(
îî 
this
îî 
.
îî 
joins
îî 
.
îî 
Any
îî 
(
îî 
)
îî  
)
îî  !
{
ïï 
sql
ññ 
.
ññ 
Append
ññ 
(
ññ 
this
ññ 
.
ññ  
joins
ññ  %
)
ññ% &
;
ññ& '
}
óó 
if
ôô 
(
ôô 
this
ôô 
.
ôô 
whereClause
ôô  
!=
ôô! #
null
ôô$ (
)
ôô( )
{
öö 
sql
õõ 
.
õõ 
Append
õõ 
(
õõ 
this
õõ 
.
õõ  
whereClause
õõ  +
)
õõ+ ,
;
õõ, -
}
úú 
return
ûû 
sql
ûû 
.
ûû 
ToString
ûû 
(
ûû  
)
ûû  !
;
ûû! "
}
üü 	
public
££ 
override
££ 
string
££ 
ToString
££ '
(
££' (
)
££( )
=>
££* ,
this
££- 1
.
££1 2
ToSql
££2 7
(
££7 8
)
££8 9
;
££9 :
private
´´ 
bool
´´ !
HasColumnsSpecified
´´ (
(
´´( )
)
´´) *
=>
´´+ -
this
´´. 2
.
´´2 3
selectColumns
´´3 @
.
´´@ A
Any
´´A D
(
´´D E
)
´´E F
;
´´F G
}
ÆÆ 
}ØØ î
bC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestType\IRequest.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestType  
{ 
[

 
	PublicAPI

 
]

 
public 

	interface 
IRequest 
{ 
[ 	
NotNull	 
] 
string 
ToSql 
( 
) 
; 
[ 	
NotNull	 
] 
string 
ToString 
( 
) 
; 
} 
} ÷

hC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Sql\RequestType\ISelectRequest.cs
	namespace 	
Ustilz
 
. 
Sql 
. 
RequestType  
{ 
public 

	interface 
ISelectRequest #
:$ %
IRequest& .
{ 
ITable 
PrincipalTable 
{ 
get  #
;# $
}% &
IWhereClause 
WhereClause  
{! "
get# &
;& '
}( )
void 
AddFirstWhereClause  
(  !

ICondition! +
	condition, 5
)5 6
;6 7
void$$ 
AddJoin$$ 
($$ 
TypeJoin$$ 
typeJoin$$ &
,$$& '
string$$( .
otherColumn$$/ :
,$$: ;
ITable$$< B
	tableJoin$$C L
,$$L M
string$$N T

rootColumn$$U _
)$$_ `
;$$` a
void(( 
AddSelectColumn(( 
((( 
string(( #
col(($ '
)((' (
;((( )
void-- 
AddSelectColumn-- 
(-- 
string-- #
col--$ '
,--' (
string--) /
alias--0 5
)--5 6
;--6 7
}00 
}11 Ç
VC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Time\Horloge.cs
	namespace 	
Ustilz
 
. 
Time 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
Horloge 
{ 
private 
static 
Func 
< 
DateTime $
>$ %
fonction& .
;. /
static 
Horloge 
( 
) 
=> 
fonction $
=% &
(' (
)( )
=>* ,
DateTime- 5
.5 6
Now6 9
;9 :
public!! 
static!! 
DateTime!! 

Maintenant!! )
=>!!* ,
fonction!!- 5
(!!5 6
)!!6 7
;!!7 8
public%% 
static%% 
Func%% 
<%% 
DateTime%% #
>%%# $!
SetFonctionMaintenant%%% :
{&& 	
set'' 
=>'' 
fonction'' 
='' 
value'' #
??''$ &
(''' (
(''( )
)'') *
=>''+ -
DateTime''. 6
.''6 7
Now''7 :
)'': ;
;''; <
}(( 	
public// 
static// 
void// 
Reset//  
(//  !
)//! "
=>//# %!
SetFonctionMaintenant//& ;
=//< =
null//> B
;//B C
}22 
}33 ù
WC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\UI\ColorUtils.cs
	namespace 	
Ustilz
 
. 
UI 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 

ColorUtils "
{ 
private 
static 
readonly 
Random  &
Random' -
=. /
new0 3
Random4 :
(: ;
); <
;< =
[ 	
NotNull	 
] 
public 
static 
string 
GenererCouleur +
(+ ,
), -
=>. 0
$"1 3
{3 4
Random4 :
.: ;
Next; ?
(? @
$num@ I
)I J
:J K
X6K M
}M N
"N O
;O P
[## 	
NotNull##	 
]## 
public$$ 
static$$ 
string$$ 
GetColorFromNom$$ ,
($$, -
[$$- .
NotNull$$. 5
]$$5 6
string$$7 =
nom$$> A
)$$A B
=>$$C E
GetColorFromNom$$F U
($$U V
nom$$V Y
,$$Y Z
false$$[ `
)$$` a
;$$a b
[** 	
NotNull**	 
]** 
public++ 
static++ 
string++ 
GetColorFromNom++ ,
(++, -
[++- .
NotNull++. 5
]++5 6
string++7 =
nom++> A
,++A B
bool++C G
	eclaircir++H Q
)++Q R
{,, 	
if-- 
(-- 
nom-- 
.-- 
Length-- 
==-- 
$num-- 
)--  
{.. 
return// 
$"// 
#// 
{// 
string// !
.//! "
Join//" &
(//& '
string//' -
.//- .
Empty//. 3
,//3 4
nom//5 8
.//8 9
Select//9 ?
(//? @
c//@ A
=>//B D
(//E F
(//F G
byte//G K
)//K L
c//L M
)//M N
.//N O
ToString//O W
(//W X
$str//X [
)//[ \
)//\ ]
)//] ^
}//^ _
"//_ `
;//` a
}00 
var22 
s22 
=22 
string22 
.22 
Join22 
(22  
string22  &
.22& '
Empty22' ,
,22, -
nom22. 1
.221 2
Select222 8
(228 9
c229 :
=>22; =
(22> ?
(22? @
byte22@ D
)22D E
c22E F
)22F G
.22G H
ToString22H P
(22P Q
$str22Q T
)22T U
)22U V
)22V W
;22W X
var33 
bi33 
=33 

BigInteger33 
.33  
Parse33  %
(33% &
s33& '
,33' (
NumberStyles33) 5
.335 6
AllowHexSpecifier336 G
)33G H
;33H I
var44 
bii44 
=44 
bi44 
%44 
$num44 #
;44# $
if77 
(77 
	eclaircir77 
)77 
{88 
bii99 
|=99 
$num99 
;99  
}:: 
var<< 
color<< 
=<< 
$"<< 
#<< 
{<< 
(<< 
long<< !
)<<! "
bii<<" %
:<<% &
X6<<& (
}<<( )
"<<) *
;<<* +
return== 
color== 
.== 
Length== 
!===  "
$num==# $
?==% &
$str==' 0
:==1 2
color==3 8
;==8 9
}>> 	
}AA 
}BB ∏R
UC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Utils\Check.cs
	namespace 	
Ustilz
 
. 
Utils 
{ 
[ 
DebuggerStepThrough 
] 
[ 
	PublicAPI 
] 
public 

static 
class 
Check 
{ 
[ 	
NotNull	 
] 
public 
static 
IReadOnlyList #
<# $
T$ %
>% &

HasNoNulls' 1
<1 2
T2 3
>3 4
(4 5
[5 6
NotNull6 =
]= >
IReadOnlyList? L
<L M
TM N
>N O
valueP U
,U V
[W X 
InvokerParameterNameX l
]l m
[n o
NotNullo v
]v w
stringx ~
parameterName	 å
)
å ç
where 
T 
: 
class 
{ 	
NotNull 
( 
value 
, 
parameterName (
)( )
;) *
if!! 
(!! 
value!! 
.!! 
All!! 
(!! 
e!! 
=>!! 
e!!  
!=!!! #
null!!$ (
)!!( )
)!!) *
{"" 
return## 
value## 
;## 
}$$ 
NotEmpty&& 
(&& 
parameterName&& "
,&&" #
nameof&&$ *
(&&* +
parameterName&&+ 8
)&&8 9
)&&9 :
;&&: ;
throw(( 
new(( 
ArgumentException(( '
(((' (
parameterName((( 5
)((5 6
;((6 7
})) 	
[00 	
NotNull00	 
]00 
[11 	
ContractAnnotation11	 
(11 
$str11 0
)110 1
]111 2
public22 
static22 
IReadOnlyList22 #
<22# $
T22$ %
>22% &
NotEmpty22' /
<22/ 0
T220 1
>221 2
(222 3
IReadOnlyList223 @
<22@ A
T22A B
>22B C
value22D I
,22I J
[22K L 
InvokerParameterName22L `
]22` a
[22b c
NotNull22c j
]22j k
string22l r
parameterName	22s Ä
)
22Ä Å
{33 	
NotNull44 
(44 
value44 
,44 
parameterName44 (
)44( )
;44) *
if66 
(66 
value66 
.66 
Count66 
!=66 
$num66  
)66  !
{77 
return88 
value88 
;88 
}99 
NotEmpty;; 
(;; 
parameterName;; "
,;;" #
nameof;;$ *
(;;* +
parameterName;;+ 8
);;8 9
);;9 :
;;;: ;
throw== 
new== 
ArgumentException== '
(==' (
Strings==( /
.==/ 0%
CollectionArgumentIsEmpty==0 I
(==I J
parameterName==J W
)==W X
)==X Y
;==Y Z
}>> 	
[DD 	
NotNullDD	 
]DD 
[EE 	
ContractAnnotationEE	 
(EE 
$strEE 0
)EE0 1
]EE1 2
publicFF 
staticFF 
stringFF 
NotEmptyFF %
(FF% &
stringFF& ,
valueFF- 2
,FF2 3
[FF4 5 
InvokerParameterNameFF5 I
]FFI J
[FFK L
NotNullFFL S
]FFS T
stringFFU [
parameterNameFF\ i
)FFi j
{GG 	
	ExceptionHH 
eHH 
=HH 
nullHH 
;HH 
ifII 
(II 
ReferenceEqualsII 
(II  
valueII  %
,II% &
nullII' +
)II+ ,
)II, -
{JJ 
eKK 
=KK 
newKK !
ArgumentNullExceptionKK -
(KK- .
parameterNameKK. ;
)KK; <
;KK< =
}LL 
elseMM 
ifMM 
(MM 
valueMM 
.MM 
TrimMM 
(MM  
)MM  !
.MM! "
LengthMM" (
==MM) +
$numMM, -
)MM- .
{NN 
eOO 
=OO 
newOO 
ArgumentExceptionOO )
(OO) *
StringsOO* 1
.OO1 2
ArgumentIsEmptyOO2 A
(OOA B
parameterNameOOB O
)OOO P
)OOP Q
;OOQ R
}PP 
ifRR 
(RR 
eRR 
==RR 
nullRR 
)RR 
{SS 
returnTT 
valueTT 
;TT 
}UU 
NotEmptyWW 
(WW 
parameterNameWW "
,WW" #
nameofWW$ *
(WW* +
parameterNameWW+ 8
)WW8 9
)WW9 :
;WW: ;
throwYY 
eYY 
;YY 
}ZZ 	
[aa 	
NotNullaa	 
]aa 
[bb 	
ContractAnnotationbb	 
(bb 
$strbb 0
)bb0 1
]bb1 2
publiccc 
staticcc 
Tcc 
NotNullcc 
<cc  
Tcc  !
>cc! "
(cc" #
[cc# $
NoEnumerationcc$ 1
]cc1 2
Tcc3 4
valuecc5 :
,cc: ;
[cc< = 
InvokerParameterNamecc= Q
]ccQ R
[ccS T
NotNullccT [
]cc[ \
stringcc] c
parameterNameccd q
)ccq r
{dd 	
ifee 
(ee 
!ee 
ReferenceEqualsee  
(ee  !
valueee! &
,ee& '
nullee( ,
)ee, -
)ee- .
{ff 
returngg 
valuegg 
;gg 
}hh 
NotEmptyjj 
(jj 
parameterNamejj "
,jj" #
nameofjj$ *
(jj* +
parameterNamejj+ 8
)jj8 9
)jj9 :
;jj: ;
throwll 
newll !
ArgumentNullExceptionll +
(ll+ ,
parameterNamell, 9
)ll9 :
;ll: ;
}mm 	
[uu 	
NotNulluu	 
]uu 
[vv 	
ContractAnnotationvv	 
(vv 
$strvv 0
)vv0 1
]vv1 2
publicww 
staticww 
Tww 
NotNullww 
<ww  
Tww  !
>ww! "
(ww" #
[ww# $
NoEnumerationww$ 1
]ww1 2
Tww3 4
valueww5 :
,ww: ;
[ww< = 
InvokerParameterNameww= Q
]wwQ R
[wwS T
NotNullwwT [
]ww[ \
stringww] c
parameterNamewwd q
,wwq r
[wws t
NotNullwwt {
]ww{ |
string	ww} É
propertyName
wwÑ ê
)
wwê ë
{xx 	
ifyy 
(yy 
!yy 
ReferenceEqualsyy  
(yy  !
valueyy! &
,yy& '
nullyy( ,
)yy, -
)yy- .
{zz 
return{{ 
value{{ 
;{{ 
}|| 
NotEmpty~~ 
(~~ 
parameterName~~ "
,~~" #
nameof~~$ *
(~~* +
parameterName~~+ 8
)~~8 9
)~~9 :
;~~: ;
NotEmpty 
( 
propertyName !
,! "
nameof# )
() *
propertyName* 6
)6 7
)7 8
;8 9
throw
ÅÅ 
new
ÅÅ 
ArgumentException
ÅÅ '
(
ÅÅ' (
Strings
ÅÅ( /
.
ÅÅ/ 0"
ArgumentPropertyNull
ÅÅ0 D
(
ÅÅD E
propertyName
ÅÅE Q
,
ÅÅQ R
parameterName
ÅÅS `
)
ÅÅ` a
)
ÅÅa b
;
ÅÅb c
}
ÇÇ 	
[
àà 	
	CanBeNull
àà	 
]
àà 
public
ââ 
static
ââ 
string
ââ 
NullButNotEmpty
ââ ,
(
ââ, -
[
ââ- .
	CanBeNull
ââ. 7
]
ââ7 8
string
ââ9 ?
value
ââ@ E
,
ââE F
[
ââG H"
InvokerParameterName
ââH \
]
ââ\ ]
[
ââ^ _
NotNull
ââ_ f
]
ââf g
string
ââh n
parameterName
ââo |
)
ââ| }
{
ää 	
if
ãã 
(
ãã 
ReferenceEquals
ãã 
(
ãã  
value
ãã  %
,
ãã% &
null
ãã' +
)
ãã+ ,
||
ãã- /
value
ãã0 5
.
ãã5 6
Length
ãã6 <
!=
ãã= ?
$num
ãã@ A
)
ããA B
{
åå 
return
çç 
value
çç 
;
çç 
}
éé 
NotEmpty
êê 
(
êê 
parameterName
êê "
,
êê" #
nameof
êê$ *
(
êê* +
parameterName
êê+ 8
)
êê8 9
)
êê9 :
;
êê: ;
throw
íí 
new
íí 
ArgumentException
íí '
(
íí' (
Strings
íí( /
.
íí/ 0
ArgumentIsEmpty
íí0 ?
(
íí? @
parameterName
íí@ M
)
ííM N
)
ííN O
;
ííO P
}
ìì 	
public
ôô 
static
ôô 
Type
ôô 
ValidEntityType
ôô *
(
ôô* +
Type
ôô+ /
value
ôô0 5
,
ôô5 6
[
ôô7 8"
InvokerParameterName
ôô8 L
]
ôôL M
[
ôôN O
NotNull
ôôO V
]
ôôV W
string
ôôX ^
parameterName
ôô_ l
)
ôôl m
{
öö 	
if
õõ 
(
õõ 
value
õõ 
.
õõ 
GetTypeInfo
õõ !
(
õõ! "
)
õõ" #
.
õõ# $
IsClass
õõ$ +
)
õõ+ ,
{
úú 
return
ùù 
value
ùù 
;
ùù 
}
ûû 
NotEmpty
†† 
(
†† 
parameterName
†† "
,
††" #
nameof
††$ *
(
††* +
parameterName
††+ 8
)
††8 9
)
††9 :
;
††: ;
throw
¢¢ 
new
¢¢ 
ArgumentException
¢¢ '
(
¢¢' (
Strings
¢¢( /
.
¢¢/ 0
InvalidEntityType
¢¢0 A
(
¢¢A B
value
¢¢B G
,
¢¢G H
parameterName
¢¢I V
)
¢¢V W
)
¢¢W X
;
¢¢X Y
}
££ 	
}
¶¶ 
}ßß ¯-
WC:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Utils\Strings.cs
	namespace 	
Ustilz
 
. 
Utils 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
Strings 
{ 
private 
static 
readonly 
ResourceManager  /
ResourceManager0 ?
;? @
static 
Strings 
( 
) 
=> 
ResourceManager +
=, -
new. 1
ResourceManager2 A
(A B
$strB r
,r s
typeoft z
(z {
Strings	{ Ç
)
Ç É
.
É Ñ
GetTypeInfo
Ñ è
(
è ê
)
ê ë
.
ë í
Assembly
í ö
)
ö õ
;
õ ú
public&& 
static&& 
string&& 
ArgumentIsEmpty&& ,
(&&, -
[&&- .
	CanBeNull&&. 7
]&&7 8
object&&9 ?
argumentName&&@ L
)&&L M
=>&&N P
string&&Q W
.&&W X
Format&&X ^
(&&^ _
CultureInfo&&_ j
.&&j k
CurrentCulture&&k y
,&&y z
	GetString	&&{ Ñ
(
&&Ñ Ö
$str
&&Ö ñ
,
&&ñ ó
$str
&&ò ¶
)
&&¶ ß
,
&&ß ®
new
&&© ¨
[
&&¨ ≠
]
&&≠ Æ
{
&&Ø ∞
argumentName
&&± Ω
}
&&æ ø
)
&&ø ¿
;
&&¿ ¡
public,, 
static,, 
string,,  
ArgumentPropertyNull,, 1
(,,1 2
[,,2 3
	CanBeNull,,3 <
],,< =
object,,> D
property,,E M
,,,M N
[,,O P
	CanBeNull,,P Y
],,Y Z
object,,[ a
argument,,b j
),,j k
=>,,l n
string,,o u
.,,u v
Format,,v |
(,,| }
CultureInfo	,,} à
.
,,à â
CurrentCulture
,,â ó
,
,,ó ò
	GetString
,,ô ¢
(
,,¢ £
$str
,,£ π
,
,,π ∫
$str
,,ª ≈
,
,,≈ ∆
$str
,,« —
)
,,— “
,
,,“ ”
property
,,‘ ‹
,
,,‹ ›
argument
,,ﬁ Ê
)
,,Ê Á
;
,,Á Ë
public11 
static11 
string11 %
CollectionArgumentIsEmpty11 6
(116 7
[117 8
	CanBeNull118 A
]11A B
object11C I
argumentName11J V
)11V W
=>11X Z
string11[ a
.11a b
Format11b h
(11h i
CultureInfo11i t
.11t u
CurrentCulture	11u É
,
11É Ñ
	GetString
11Ö é
(
11é è
$str
11è ™
,
11™ ´
$str
11¨ ∫
)
11∫ ª
,
11ª º
new
11Ω ¿
[
11¿ ¡
]
11¡ ¬
{
11√ ƒ
argumentName
11≈ —
}
11“ ”
)
11” ‘
;
11‘ ’
public77 
static77 
string77 
InvalidEntityType77 .
(77. /
[77/ 0
	CanBeNull770 9
]779 :
object77; A
type77B F
,77F G
[77H I
	CanBeNull77I R
]77R S
object77T Z
argumentName77[ g
)77g h
=>77i k
string77l r
.77r s
Format77s y
(77y z
CultureInfo	77z Ö
.
77Ö Ü
CurrentCulture
77Ü î
,
77î ï
	GetString
77ñ ü
(
77ü †
$str
77† ≥
,
77≥ ¥
$str
77µ ª
,
77ª º
$str
77Ω À
)
77À Ã
,
77Ã Õ
new
77Œ —
[
77— “
]
77“ ”
{
77‘ ’
type
77÷ ⁄
,
77⁄ €
argumentName
77‹ Ë
}
77È Í
)
77Í Î
;
77Î Ï
[<< 	
	CanBeNull<<	 
]<< 
public== 
static== 
string== 
GenererInitiales== -
(==- .
[==. /
	CanBeNull==/ 8
]==8 9
this==: >
string==? E
nom==F I
)==I J
=>==K M
nom==N Q
?==Q R
.==R S
	Substring==S \
(==\ ]
$num==] ^
,==^ _
$num==` a
)==a b
.==b c
ToUpper==c j
(==j k
)==k l
;==l m
privateGG 
staticGG 
stringGG 
	GetStringGG '
(GG' (
stringGG( .
nameGG/ 3
,GG3 4
paramsGG5 ;
stringGG< B
[GGB C
]GGC D
formatterNamesGGE S
)GGS T
{HH 	
varII 
strII 
=II 
ResourceManagerII %
.II% &
	GetStringII& /
(II/ 0
nameII0 4
)II4 5
;II5 6
ifJJ 
(JJ 
formatterNamesJJ 
.JJ 
IsNullJJ %
(JJ% &
)JJ& '
)JJ' (
{KK 
returnLL 
strLL 
;LL 
}MM 
forOO 
(OO 
varOO 
indexOO 
=OO 
$numOO 
;OO 
indexOO  %
<OO& '
formatterNamesOO( 6
.OO6 7
LengthOO7 =
;OO= >
++OO? A
indexOOA F
)OOF G
{PP 
strQQ 
=QQ 
strQQ 
.QQ 
ReplaceQQ !
(QQ! "
$strQQ" %
+QQ& '
formatterNamesQQ( 6
[QQ6 7
indexQQ7 <
]QQ< =
+QQ> ?
$strQQ@ C
,QQC D
$strQQE H
+QQI J
indexQQK P
+QQQ R
$strQQS V
)QQV W
;QQW X
}RR 
returnTT 
strTT 
;TT 
}UU 	
}XX 
}YY œ
[C:\Users\ravonde\Documents\Projets\C#\Repos Git\Ustilz\Ustilz.Standard\Xml\XmlExtensions.cs
	namespace 	
Ustilz
 
. 
Xml 
{ 
[ 
	PublicAPI 
] 
public 

static 
class 
XmlExtensions %
{ 
public 
static 
T 
FromXml 
<  
T  !
>! "
(" #
[# $
NotNull$ +
]+ ,
this- 1
	XDocument2 ;
xmlDocument< G
)G H
{ 	
var 
xmlSerializer 
= 
new  #
XmlSerializer$ 1
(1 2
typeof2 8
(8 9
T9 :
): ;
); <
;< =
using 
( 
var 
reader 
= 
xmlDocument  +
.+ ,
CreateReader, 8
(8 9
)9 :
): ;
{ 
return 
( 
T 
) 
xmlSerializer '
.' (
Deserialize( 3
(3 4
reader4 :
): ;
;; <
} 
} 	
public## 
static## 
string## 
ToXml## "
<##" #
T### $
>##$ %
(##% &
this##& *
T##+ ,
obj##- 0
)##0 1
{$$ 	
var%% 
doc%% 
=%% 
new%% 
	XDocument%% #
(%%# $
)%%$ %
;%%% &
using&& 
(&& 
var&& 
	xmlWriter&&  
=&&! "
doc&&# &
.&&& '
CreateWriter&&' 3
(&&3 4
)&&4 5
)&&5 6
{'' 
var(( 
xmlSerializer(( !
=((" #
new(($ '
XmlSerializer((( 5
(((5 6
typeof((6 <
(((< =
T((= >
)((> ?
)((? @
;((@ A
xmlSerializer)) 
.)) 
	Serialize)) '
())' (
	xmlWriter))( 1
,))1 2
obj))3 6
)))6 7
;))7 8
}** 
return,, 
doc,, 
.,, 
ToString,, 
(,,  
),,  !
;,,! "
}-- 	
}00 
}11 