Ustilz.Http.HttpExtensions
Ustilz.Http.HttpService
Ustilz.Http.HttpService.Dispose() -> void
Ustilz.Http.HttpService.GetHttpResponseAsync(System.Uri! url, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! headers, string! authentification) -> System.Threading.Tasks.Task<(System.Net.HttpStatusCode StatusCode, string? ResponsePhrase, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! Headers, string? Response)>!
Ustilz.Http.HttpService.GetHttpResponseAsync<TResponse>(System.Uri! url, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! headers, string! authentification) -> System.Threading.Tasks.Task<(System.Net.HttpStatusCode Code, string? ResponsePhrase, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! Headers, TResponse? Response)>!
Ustilz.Http.HttpService.GetStringAsync(System.Uri! url, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! headers, string! authentification) -> System.Threading.Tasks.Task<string!>!
Ustilz.Http.HttpService.GetStringAsync(System.Uri! url, string! authentification) -> System.Threading.Tasks.Task<string!>!
Ustilz.Http.HttpService.GetStringAsync<TResponse>(System.Uri! url, string! authentification) -> System.Threading.Tasks.Task<TResponse?>!
Ustilz.Http.HttpService.HttpService() -> void
Ustilz.Http.HttpService.PostAsync(System.Uri! url, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! headers, string! content, string! authentification) -> System.Threading.Tasks.Task<string!>!
Ustilz.Http.HttpService.PostAsync(System.Uri! url, string! content, string! authentification) -> System.Threading.Tasks.Task<string!>!
Ustilz.Http.HttpService.PostAsync<TResponse>(System.Uri! url, string! content, string! authentification) -> System.Threading.Tasks.Task<TResponse?>!
Ustilz.Http.HttpService.PostHttpResponseAsync(System.Uri! url, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! headers, string! body, string! authentification) -> System.Threading.Tasks.Task<(System.Net.HttpStatusCode StatusCode, string? ResponsePhrase, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! Headers, string? Response)>!
static Ustilz.Http.HttpExtensions.GetRawBodyBytesAsync(this Microsoft.AspNetCore.Http.HttpRequest! request) -> System.Threading.Tasks.Task<byte[]!>!
static Ustilz.Http.HttpExtensions.GetRawBodyStringAsync(this Microsoft.AspNetCore.Http.HttpRequest! request, System.Text.Encoding? encoding = null) -> System.Threading.Tasks.Task<string!>!
static Ustilz.Http.HttpExtensions.ProcessWebException(this System.Net.WebException! exception) -> System.Net.WebException!
static Ustilz.Http.HttpExtensions.SetAuthentication(this System.Net.Http.HttpClient! client, string! authentication) -> void
static Ustilz.Http.HttpExtensions.SetHeaders(this Microsoft.AspNetCore.Http.HttpResponse! response, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! headers) -> void
static Ustilz.Http.HttpExtensions.SetHeaders(this System.Net.Http.HttpClient! client, System.Collections.Generic.Dictionary<string!, System.Collections.Generic.IEnumerable<string!>!>! headers) -> void